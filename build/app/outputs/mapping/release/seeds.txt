com.google.android.material.snackbar.SnackbarContentLayout
com.google.android.gms.auth.api.signin.SignInAccount
com.google.android.gms.common.internal.zzd
com.google.android.gms.common.internal.IGmsServiceBroker$Stub
com.otpless.R$dimen
com.google.android.gms.dynamic.ObjectWrapper
com.otpless.tesseract.OtplessSecureService
com.otpless.network.OtplessRepository$pushEvent$1
com.google.android.material.transformation.ExpandableTransformationBehavior
com.otpless.network.OtplessRepository
com.otpless.utils.OtplessPhoneHintManagerImpl$Companion
com.google.android.material.datepicker.MaterialDatePicker
com.google.android.gms.auth.api.credentials.HintRequest
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onUnavailable$1
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.google.android.material.sidesheet.SideSheetBehavior
com.otpless.network.OtplessRepository$requestSnaAsync$1
com.otpless.dto.HeadlessChannelType
androidx.preference.PreferenceGroup
com.google.android.material.timepicker.ChipTextInputComboView
com.otpless.main.NativeWebListener
androidx.appcompat.widget.ActionBarOverlayLayout
kotlin.coroutines.Continuation
com.google.android.gms.auth.api.credentials.zbf
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$1
com.otpless.views.OtplessUserDetailCallback
com.google.android.gms.internal.auth.zzn
io.flutter.view.TextureRegistry$GLTextureConsumer
com.otpless.views.OnColorParseCallback
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$1$1
com.google.android.gms.internal.auth-api.zbd
com.otpless.web.NativeWebManager$1
com.otpless.tesseract.SecureAnalysisResponse
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1
com.google.android.gms.internal.common.zzb
com.google.android.gms.auth.api.credentials.CredentialPickerConfig
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
androidx.appcompat.widget.ActionMenuView
com.google.android.gms.internal.auth-api-phone.zzb
com.otpless.network.OtplessCellularNetworkImplV2$telephonyService$2
com.otpless.tesseract.ApiException
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub
com.google.android.material.timepicker.TimePickerView
com.google.android.material.internal.TouchObserverFrameLayout
com.otpless.tesseract.SecureAnalysisSuccess
com.otpless.tesseract.ApiData$Error
com.otpless.dto.HeadlessRequest
com.otpless.network.OtplessCellularDataListener
com.otpless.BuildConfig
com.otpless.otplessflutter.OtplessFlutterPlugin$Companion
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Prompt
com.otpless.tesseract.OtplessSecureServiceKt
com.otpless.web.OtplessWebListener
com.otpless.R$id
com.google.android.material.textfield.TextInputLayout
com.otpless.views.OtplessContainerView
com.google.android.material.datepicker.MaterialCalendarGridView
com.google.android.gms.dynamic.IObjectWrapper$Stub
com.otpless.tesseract.sim.OtplessSimStateReceiverKt$getSavedSimEjectionEntries$$inlined$sortByDescending$1
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1
com.otpless.otplessflutter.R
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
com.otpless.R$styleable
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements
com.otpless.views.OtplessContainerView$1
com.google.android.gms.internal.auth.zzl
com.otpless.dto.HeadlessRequest$1
com.otpless.network.OtplessRepository$requestSnaAsync$1$1
androidx.fragment.app.DialogFragment
com.otpless.network.OtplessNetworkManager$1
com.otpless.web.NativeWebManager$2
com.google.android.gms.internal.auth.zzbf
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1$1
com.otpless.network.ONetworkType
com.otpless.web.OtplessWebViewWrapper
com.otpless.network.OtplessRepository$pushEventAsync$2
com.otpless.network.OtplessRepository$pushEventAsync$1$1
com.otpless.network.OtplessConnectivityManager$Companion
com.otpless.network.OtplessRepository$pushEventAsync$1
androidx.window.extensions.core.util.function.Consumer
com.otpless.tesseract.sim.OtplessSimStateReceiver
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2
com.google.android.material.appbar.AppBarLayout$BaseBehavior
androidx.lifecycle.ProcessLifecycleInitializer
com.otpless.main.OtplessManager$ActivityLifeManager
com.otpless.utils.OtplessPhoneHintManager$DefaultImpls
io.flutter.view.FlutterCallbackInformation
com.otpless.main.WhatsappOtpReader
io.flutter.plugins.GeneratedPluginRegistrant
com.otpless.config.Configuration
com.google.android.gms.auth.api.credentials.zba
com.otpless.tesseract.SecureAnalysisFpRequest
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.preference.DialogPreference
com.otpless.authfusion.AuthFusionSdk
com.google.android.gms.auth.api.signin.internal.zbo
com.google.android.gms.internal.auth-api-phone.zzf
com.google.android.gms.auth.api.credentials.CredentialRequestResult
com.google.android.gms.auth.api.signin.internal.zbq
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.otpless.dto.OtplessResponse
androidx.recyclerview.widget.RecyclerView
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1
androidx.appcompat.widget.DialogTitle
androidx.transition.FragmentTransitionSupport
androidx.appcompat.view.menu.ListMenuItemView
com.google.android.gms.auth.api.credentials.Credential
com.otpless.tesseract.OtplessSecureService$DefaultImpls
com.otpless.tesseract.ApiData$Success
androidx.appcompat.widget.ViewStubCompat
com.otpless.web.OtplessWebView$OtplessWebClient
com.google.android.gms.common.internal.zzaf
com.google.android.gms.auth.api.credentials.CredentialsClient
com.google.android.gms.dynamic.FragmentWrapper
android.support.v4.app.RemoteActionCompatParcelizer
com.otpless.views.ColorUtils
com.otpless.main.PhoneHintLauncherType
com.otpless.network.OtplessRepository$pushEvent$data$1
com.google.android.gms.auth.api.signin.internal.SignInConfiguration
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback
com.otpless.main.OtplessEventCallback
com.otpless.R$xml
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
androidx.recyclerview.widget.LinearLayoutManager
com.otpless.web.WebLoaderCallback
com.google.android.material.carousel.CarouselLayoutManager
androidx.preference.EditTextPreference
com.google.android.gms.internal.auth-api-phone.zzi
com.google.android.gms.auth.account.zza
com.google.android.gms.common.api.GoogleApiActivity
com.otpless.network.EventService
com.otpless.network.ApiCallback
com.otpless.R$anim
com.google.android.gms.common.internal.IAccountAccessor$Stub
com.google.android.material.datepicker.MaterialCalendar
com.otpless.network.OtplessCellularNetworkImpl$connectivityManager$2
com.google.android.gms.common.internal.service.zaj
com.otpless.authfusion.AuthFusionManager
com.google.android.gms.common.api.internal.LifecycleCallback
android.support.customtabs.IPostMessageService$Stub
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.otpless.main.OtplessViewRemovalNotifier
com.otpless.tesseract.sim.OtplessSimStateReceiverApiKt
com.google.android.gms.auth.api.credentials.CredentialRequest
android.support.v4.os.IResultReceiver$Stub
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.otpless.network.OtplessRepository$snaService$2
com.google.android.gms.common.api.internal.zact
android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer
com.otpless.utils.OtpResultListener
com.google.android.gms.common.api.Status
com.google.android.gms.internal.fido.zzd
com.otpless.dto.Triple
com.otpless.R$string
com.otpless.main.OtplessRandomIdGenerator
com.otpless.main.WhatsappOtpReaderImpl$incomingIntentHandler$2
com.otpless.R$style
com.google.android.gms.internal.auth.zzan
com.otpless.main.OtplessViewContract
io.flutter.plugins.sharedpreferences.LegacySharedPreferencesPlugin
androidx.appcompat.widget.ContentFrameLayout
com.otpless.network.OtplessRepository$makeConnection$1
com.otpless.authfusion.GoogleCredentialSdk
com.otpless.web.PageLoadStatusCallback
com.otpless.main.OtplessEventData
com.otpless.R$attr
com.google.android.material.textfield.TextInputEditText
com.otpless.network.OtplessCellularNetworkImpl$Companion
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin
androidx.preference.CheckBoxPreference
com.otpless.main.OtplessWebAuthnManager
com.google.android.gms.auth.api.credentials.CredentialRequestResponse
com.google.android.gms.internal.auth-api.zbae
com.google.android.material.appbar.AppBarLayout$Behavior
com.google.android.gms.dynamic.SupportFragmentWrapper
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1
com.google.android.gms.common.internal.zzac
com.otpless.tesseract.sim.OtplessSimStateReceiverApi
retrofit2.Call
androidx.appcompat.widget.AlertDialogLayout
com.otpless.main.ResultCallback
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onAvailable$2
io.flutter.view.TextureRegistry$SurfaceProducer
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements
com.otpless.R$color
com.otpless.main.OtplessView
com.otpless.main.OtplessManager
com.otpless.web.OtplessWebView$1
io.flutter.plugins.urllauncher.WebViewActivity
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$snaService$2
com.google.android.material.timepicker.ClockFaceView
com.google.android.gms.dynamic.IFragmentWrapper$Stub
com.google.android.gms.common.internal.zzz
com.google.android.gms.internal.auth.zzbd
com.otpless.main.OtplessZeroTapReceiver
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$1
com.otpless.utils.OtpReaderReceiver
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.preference.UnPressableLinearLayout
androidx.appcompat.view.menu.ActionMenuItemView
com.otpless.utils.OtplessUtility$WhenMappings
com.otpless.dto.Tuple
com.google.android.gms.internal.auth.zze
androidx.profileinstaller.ProfileInstallerInitializer
com.google.android.gms.common.internal.FallbackServiceBroker
com.google.android.gms.common.api.internal.StatusCallback
androidx.appcompat.widget.ActionBarContainer
androidx.preference.MultiSelectListPreference
com.google.android.material.button.MaterialButton
com.google.android.gms.internal.fido.zzb
com.otpless.tesseract.ApiData
androidx.preference.SwitchPreferenceCompat
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
com.google.android.material.internal.BaselineLayout
com.google.android.gms.common.util.DynamiteApi
androidx.emoji2.text.EmojiCompatInitializer
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$1
com.otpless.dto.HeadlessChannel
com.otpless.dto.OtpDeliveryChannel
com.google.android.gms.internal.auth.zzas
com.google.android.gms.internal.auth-api-phone.zzd
com.google.android.gms.auth.api.credentials.Credentials
com.otpless.utils.OnceUseProp
com.otpless.utils.EventConstant
com.otpless.network.OtplessRepository$makeConnection$job$1
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
io.flutter.plugin.platform.SingleViewPresentation
com.google.android.material.appbar.MaterialToolbar
com.otpless.network.ONetworkStatus
androidx.preference.ListPreference
com.otpless.dto.HeadlessResponse
com.otpless.utils.OtplessPhoneHint
com.otpless.views.OtplessLoaderEvent
com.google.android.gms.common.internal.service.zaa
com.google.android.gms.auth.account.zzd
com.google.android.gms.signin.internal.zac
com.google.android.gms.internal.auth-api.zby
com.otpless.otplessflutter.UtilityKt
com.otpless.network.OtplessCellularNetworkImpl
com.google.android.material.search.SearchBar$ScrollingViewBehavior
android.support.customtabs.trusted.ITrustedWebActivityService$Stub
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$1$1$1
com.google.android.material.transformation.FabTransformationSheetBehavior
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback
com.otpless.main.WhatsappOtpReaderImpl
com.google.android.gms.internal.auth-api.zbag
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder
com.otpless.web.NativeWebManager
com.otpless.main.HeadlessInitState
com.otpless.network.OtplessCellularNetworkImplKt
com.otpless.network.OtplessRepository$warmupSna$1$1
androidx.profileinstaller.ProfileInstallReceiver
androidx.core.app.CoreComponentFactory
com.google.android.gms.auth.api.signin.internal.zbt
android.support.v4.os.IResultReceiver2$Stub
com.otpless.network.OtplessCellularNetworkImplV2
com.otpless.tesseract.SecureAnalysisRequest
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder
com.google.android.gms.internal.fido.zzq
com.google.android.material.internal.CheckableImageButton
com.otpless.network.OtplessCellularNetworkImplV2$openWithDataCellular$1
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements
retrofit2.Response
com.otpless.dto.OtplessRequest
androidx.core.app.RemoteActionCompatParcelizer
com.google.android.gms.internal.auth-api.zbab
com.google.android.gms.auth.api.credentials.IdToken
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder
com.otpless.main.OtplessManager$1
android.support.customtabs.IEngagementSignalsCallback$Stub
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.preference.SwitchPreference
com.google.android.gms.internal.base.zab
androidx.appcompat.widget.ActionBarContextView
androidx.recyclerview.widget.GridLayoutManager
androidx.appcompat.view.menu.ExpandedMenuView
com.google.android.gms.common.api.internal.zzd
com.otpless.tesseract.sim.SimDetailProvider
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.otpless.utils.OtplessUtility
androidx.constraintlayout.helper.widget.Flow
com.google.android.gms.auth.api.signin.internal.zba
com.google.android.gms.common.SupportErrorDialogFragment
com.otpless.network.OtplessNetworkManager$2
androidx.preference.PreferenceCategory
com.google.android.gms.internal.auth.zzj
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onAvailable$1
com.google.android.gms.signin.internal.zad
androidx.startup.InitializationProvider
io.flutter.plugins.pathprovider.PathProviderPlugin
com.otpless.otplessflutter.OtplessFlutterPlugin
com.google.android.gms.auth.api.signin.GoogleSignInOptions
com.otpless.utils.OtpReaderManager
androidx.constraintlayout.widget.ConstraintLayout
com.otpless.authfusion.FacebookSignInSdk
com.google.android.gms.common.internal.AccountAccessor
com.google.android.gms.internal.auth.zzb
android.support.customtabs.ICustomTabsService$Stub
com.google.android.gms.internal.fido.zzu
androidx.appcompat.app.AlertController$RecycleListView
com.google.android.gms.auth.api.credentials.CredentialsApi
com.otpless.network.OtplessRepository$requestSna$2
com.otpless.network.SnaService
com.google.android.material.transformation.FabTransformationBehavior
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1$1
com.otpless.network.OnConnectionChangeListener
com.google.android.gms.auth.api.credentials.zbd
com.google.android.material.timepicker.ClockHandView
com.otpless.utils.OtpResult
androidx.preference.SeekBarPreference
com.otpless.network.OtplessRepository$pushEventService$2
com.google.android.gms.common.api.internal.IStatusCallback$Stub
com.otpless.network.OtplessRepository$makeConnection$$inlined$CoroutineExceptionHandler$1
com.google.android.gms.common.api.Scope
com.google.android.material.bottomsheet.BottomSheetBehavior
com.google.android.gms.auth.api.credentials.zbc
com.otpless.tesseract.SecureAuthDetail
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.otpless.tesseract.SimStateEntry
com.otpless.network.OtplessRepositoryKt
com.google.android.gms.auth.api.credentials.IdentityProviders
androidx.preference.DropDownPreference
androidx.browser.browseractions.BrowserActionsFallbackMenuView
com.otpless.R$drawable
androidx.core.app.RemoteActionCompat
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$job$1
com.otpless.R
com.example.docon.MainActivity
com.google.android.material.internal.NavigationMenuView
androidx.appcompat.widget.ButtonBarLayout
androidx.appcompat.widget.AppCompatButton
com.google.android.gms.auth.api.credentials.zbb
androidx.preference.TwoStatePreference
com.otpless.main.WebActivityContract
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.otpless.R$layout
io.flutter.view.TextureRegistry$ImageConsumer
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
io.flutter.view.TextureRegistry$ImageTextureEntry
com.google.android.material.internal.NavigationMenuItemView
androidx.fragment.app.FragmentContainerView
androidx.appcompat.widget.Toolbar
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.google.android.gms.internal.auth-api.zbr
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$$inlined$CoroutineExceptionHandler$1
android.support.v4.app.INotificationSideChannel$Stub
com.google.android.gms.auth.api.credentials.Credential$Builder
com.google.android.gms.internal.fido.zzf
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$$inlined$schedule$1
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements
com.google.android.material.datepicker.MaterialTextInputPicker
androidx.core.graphics.drawable.IconCompat
com.otpless.authfusion.R
androidx.core.graphics.drawable.IconCompatParcelizer
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1
com.google.android.material.transformation.FabTransformationScrimBehavior
com.otpless.main.OtplessViewImpl$1
okhttp3.internal.publicsuffix.PublicSuffixDatabase
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.google.android.gms.internal.fido.zzl
com.otpless.utils.OtplessPhoneHintManagerImpl
com.google.android.gms.fido.common.Transport
androidx.annotation.Keep
androidx.coordinatorlayout.widget.CoordinatorLayout
com.google.android.gms.auth.api.signin.RevocationBoundService
com.otpless.utils.OtplessPhoneHintManagerImpl$showPhoneNumberHint$1$1
com.otpless.network.OtplessNetworkManager
com.otpless.network.OtplessRepository$warmupSna$1$snaService$2
io.flutter.embedding.engine.FlutterJNI
androidx.core.widget.NestedScrollView
com.otpless.dto.OtpLength
com.otpless.tesseract.R
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.google.android.material.chip.Chip
android.support.customtabs.ICustomTabsCallback$Stub
com.google.android.gms.internal.auth-api.zbak
com.otpless.web.WebJsInterface
androidx.versionedparcelable.ParcelImpl
com.otpless.web.OtplessWebView
androidx.preference.internal.PreferenceImageView
com.google.android.gms.internal.auth-api.zbb
androidx.window.extensions.core.util.function.Function
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub
com.otpless.views.OtplessLoaderCallback
androidx.preference.Preference
com.otpless.config.OtplessParamKey
com.otpless.utils.OtplessPhoneHintManager
com.otpless.tesseract.SecureAnalysisShdRequest
com.otpless.main.HeadlessResponseCallback
io.flutter.plugins.urllauncher.UrlLauncherPlugin
com.otpless.utils.Utility
com.otpless.main.OtplessZeroTapReceiver$Companion
com.otpless.network.OtplessConnectivityManager
com.google.android.gms.common.annotation.KeepName
com.google.android.gms.common.internal.ReflectedParcelable
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.google.android.material.internal.ClippableRoundedCornerLayout
com.google.android.gms.common.internal.ICancelToken$Stub
io.flutter.plugin.text.ProcessTextPlugin
com.llfbandit.app_links.AppLinksPlugin
androidx.versionedparcelable.CustomVersionedParcelable
com.otpless.web.LoadingStatusData
com.google.android.material.behavior.SwipeDismissBehavior
androidx.preference.PreferenceScreen
com.google.android.gms.auth.api.credentials.CredentialsOptions
com.otpless.main.OtplessViewImpl
com.google.android.material.transformation.ExpandableBehavior
io.flutter.view.AccessibilityViewEmbedder
androidx.window.extensions.core.util.function.Predicate
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.android.gms.auth.api.credentials.zbe
com.otpless.utils.OtplessPhoneHintManagerKt
com.otpless.network.OtplessCellularNetwork
com.google.android.material.button.MaterialButtonToggleGroup
com.google.android.gms.internal.auth-api.zbai
androidx.appcompat.widget.SwitchCompat
com.otpless.tesseract.sim.OtplessSimStateReceiverKt
com.google.android.gms.auth.api.credentials.HintRequest$Builder
com.otpless.tesseract.SecureAnalysisError
io.flutter.view.TextureRegistry$SurfaceTextureEntry
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.otpless.network.NetworkStatusData
com.otpless.main.OtplessEventCode
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.android.material.search.SearchView$Behavior
com.otpless.main.OtplessWebAuthnManagerImpl
com.otpless.network.OtplessRepository$warmupSna$1
androidx.appcompat.widget.FitWindowsFrameLayout
com.otpless.network.OtplessCellularNetworkImpl$cellularInfo$2
com.google.android.gms.common.api.internal.BasePendingResult
kotlinx.coroutines.android.AndroidDispatcherFactory
com.google.android.gms.common.GooglePlayServicesManifestException
com.otpless.web.LoadingStatus
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.otpless.network.OtplessRepository$requestSna$2: int label
com.otpless.utils.EventConstant: java.lang.String LOGIN_SDK_CALLBACK
com.otpless.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialRpEntity: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: int zbc
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: boolean zbc
com.otpless.R$attr: int otplessTextSize
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int UNINITIALIZED_HASH_CODE
com.otpless.utils.OtplessPhoneHintManagerImpl: int FALLBACK_OTPLESS_PHONE_HINT_REQUEST
com.otpless.main.OtplessWebAuthnManagerImpl: com.otpless.network.ApiCallback callback
com.otpless.utils.EventConstant: com.otpless.utils.EventConstant INSTANCE
com.otpless.main.OtplessEventCode: int BUTTON_CLICK
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.android.gms.fido.fido2.api.common.GoogleThirdPartyPaymentExtension: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.CredentialRequest: java.lang.String[] zbc
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1: kotlin.Lazy $snaService$delegate
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
com.otpless.R$dimen: int dim_20
com.google.android.gms.fido.fido2.api.common.TokenBinding: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.Lambda: int arity
com.otpless.utils.EventConstant: java.lang.String LOGIN_SDK_CALLBACK_EXP
com.otpless.main.OtplessViewImpl: android.app.Activity activity
com.google.android.gms.auth.api.credentials.CredentialRequest: java.lang.String zbh
com.otpless.main.OtplessViewImpl: com.otpless.main.OtplessWebAuthnManager webAuthnManager
com.otpless.network.OtplessRepository: kotlin.Lazy snaService$delegate
com.otpless.otplessflutter.OtplessFlutterPlugin: android.content.Context context
com.otpless.main.OtplessManager: boolean IS_SILENT_AUTH_SUPPORTED
com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialRequestOptions: android.os.Parcelable$Creator CREATOR
com.otpless.dto.HeadlessRequest$1: int[] $SwitchMap$com$otpless$dto$HeadlessChannel
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: java.lang.String zbg
androidx.datastore.preferences.PreferencesProto$PreferenceMap: int PREFERENCES_FIELD_NUMBER
com.otpless.main.OtplessViewImpl: com.otpless.main.HeadlessInitState initAction
com.otpless.network.OtplessConnectivityManager: java.lang.String PRINT_TAG
com.google.android.gms.common.server.converter.zac: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessCellularNetworkImpl: java.util.TimerTask timeoutTask
com.otpless.R$dimen: int otpless_whatsapp_dim
com.otpless.views.OtplessContainerView$1: int[] $SwitchMap$com$otpless$views$OtplessLoaderEvent
com.otpless.network.OtplessRepository: kotlin.Lazy pushEventService$delegate
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder: java.lang.String zbb
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api zad
com.otpless.network.ONetworkStatus: com.otpless.network.ONetworkStatus[] $VALUES
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2: com.otpless.network.OtplessCellularNetworkImpl this$0
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$job$1: kotlin.jvm.functions.Function1 $dataCallback
com.google.android.gms.auth.api.accounttransfer.zzu: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fido.fido2.api.common.zzs: android.os.Parcelable$Creator CREATOR
com.otpless.config.Configuration: java.lang.String URL_CACHE_SUPPORTED
com.otpless.utils.EventConstant: java.lang.String SMS_OTP_AUTOREAD_START_WEB
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.otpless.main.OtplessViewImpl: com.otpless.dto.HeadlessRequest headlessRequest
com.google.android.gms.fido.fido2.api.common.zzq: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.otpless.R$styleable: int WhatsappLoginButton_otplessCornerRadius
com.otpless.tesseract.OtplessSecureServiceKt: java.lang.String LOG_TAG
com.otpless.tesseract.ApiData$Success: java.lang.Object data
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$1: com.otpless.network.OtplessRepository this$0
com.otpless.utils.EventConstant: java.lang.String ACTIVITY_STARTED
com.otpless.dto.OtpDeliveryChannel: com.otpless.dto.OtpDeliveryChannel VIBER
com.otpless.views.OtplessContainerView$1: int[] $SwitchMap$com$otpless$web$LoadingStatus
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.otpless.utils.EventConstant: java.lang.String SMS_OTP_AUTOREAD_UNKNOWN_ERROR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.otpless.views.OtplessContainerView: boolean isToShowRetry
com.otpless.R$string: int otpless_go_otpless
com.otpless.web.LoadingStatusData: com.otpless.web.LoadingStatus loadingStatus
com.google.android.gms.auth.api.credentials.CredentialsApi: int ACTIVITY_RESULT_ADD_ACCOUNT
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.otpless.utils.EventConstant: java.lang.String ACTIVITY_STOPPED
com.google.android.gms.auth.api.credentials.CredentialsApi: int ACTIVITY_RESULT_NO_HINTS_AVAILABLE
com.google.android.gms.auth.api.credentials.HintRequest$Builder: boolean zba
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String linkedId
com.otpless.main.OtplessWebAuthnManagerImpl: com.google.android.gms.fido.fido2.Fido2ApiClient fidoApiClient
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fido.fido2.api.common.zzad: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$requestSnaAsync$1$1: com.otpless.tesseract.ApiData $data
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: java.lang.String[] zbb
com.otpless.dto.HeadlessRequest: java.lang.String phoneNumber
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.Credential$Builder: java.lang.String zbb
com.otpless.utils.EventConstant: java.lang.String VERIFY_INTENT_LOW_MEM
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.datastore.preferences.PreferencesProto$Value: int DOUBLE_FIELD_NUMBER
com.google.android.gms.fido.fido2.api.common.zzf: android.os.Parcelable$Creator CREATOR
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
com.otpless.R$layout: int otpless_fab_button
com.otpless.config.Configuration: java.lang.String URL_CACHE_COMPLETE_TIME
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancelledContinuation: int _resumed
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbh
com.otpless.network.NetworkStatusData: java.lang.String netId
com.otpless.authfusion.AuthFusionManager: kotlin.jvm.functions.Function2 onEventReceivedCallback
com.otpless.web.LoadingStatusData: java.lang.String message
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$pushEvent$data$1: java.util.Map $map
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$1: com.otpless.tesseract.ApiData $data
com.otpless.main.OtplessWebAuthnManagerImpl: int WEBAUTHN_REGISTER_REQUEST_CODE
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.otpless.utils.Utility: boolean debugLogging
com.otpless.network.OtplessRepository$warmupSna$1$1: java.lang.Object L$1
com.otpless.config.OtplessParamKey: java.lang.String IS_WHATSAPP_HANDSHAKE
com.google.android.gms.auth.api.credentials.HintRequest: java.lang.String zbg
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.otpless.R$string: int app_name
com.otpless.main.OtplessManager: com.otpless.main.OtplessManager$ActivityLifeManager lifeManager
com.otpless.views.OtplessContainerView: android.widget.FrameLayout mLoaderContainerFl
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zba
com.otpless.utils.EventConstant: java.lang.String FACEBOOK_SDK_WEB
com.otpless.dto.OtplessRequest: java.lang.String appId
com.google.android.gms.auth.api.credentials.HintRequest: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.otpless.tesseract.sim.OtplessSimStateReceiverApi: java.lang.ref.WeakReference wOnSimStateChange
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType TWITCH
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.android.gms.fido.fido2.api.common.zzh: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.IdentityProviders: java.lang.String PAYPAL
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType[] $VALUES
com.otpless.utils.EventConstant: java.lang.String BACK_PRESS
com.otpless.network.OtplessRepository$warmupSna$1$1: int label
com.otpless.utils.EventConstant: java.lang.String REQUEST_ALREADY_PUSHED
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: int label
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int memoizedSerializedSize
kotlin.jvm.internal.CallableReference: java.lang.String signature
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean newFrameAvailable
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage
com.otpless.main.WhatsappOtpReaderImpl: kotlin.Lazy incomingIntentHandler$delegate
androidx.datastore.preferences.PreferencesProto$Value: int valueCase_
com.google.android.gms.auth.api.credentials.Credential: java.lang.String EXTRA_KEY
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastScheduleTime
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$$inlined$schedule$1: com.otpless.network.OtplessCellularNetworkImpl this$0
com.otpless.network.OtplessCellularNetworkImpl$cellularInfo$2: com.otpless.network.OtplessCellularNetworkImpl this$0
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.otpless.main.OtplessViewImpl: java.lang.String INSTALL_ID_KEY
com.google.android.gms.common.internal.safeparcel.SafeParcelable: java.lang.String NULL
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Prompt: int SIGN_UP
com.google.android.gms.fido.fido2.api.common.Attachment: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessCellularNetworkImpl: java.lang.String TAG
com.otpless.utils.OtpResult: java.lang.String errorMessage
com.otpless.views.OtplessContainerView: android.widget.TextView mInfoTv
kotlin.jvm.internal.CallableReference: java.lang.String name
com.google.android.gms.common.server.response.zan: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.otpless.utils.EventConstant: java.lang.String SET_HEADLESS_CALLBACK
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: java.lang.Object L$0
kotlinx.coroutines.InvokeOnCancelling: int _invoked
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.String TAG
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType APPLE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.otpless.dto.HeadlessRequest: java.lang.String code
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.PreferencesProto$StringSet DEFAULT_INSTANCE
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.otpless.utils.Utility: java.lang.ref.WeakReference nativeWebListener
com.google.android.gms.auth.api.credentials.CredentialRequest: java.lang.String zbg
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean trimOnMemoryPressure
com.otpless.main.OtplessViewImpl: com.otpless.network.OtplessCellularNetwork otplessCellularNetwork
com.otpless.network.OtplessNetworkManager: boolean isStartFlag
com.otpless.network.ONetworkStatus: com.otpless.network.ONetworkStatus DISABLED
com.otpless.R$drawable: int otpless_fab_bg
com.otpless.dto.HeadlessResponse: java.lang.String responseType
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1$1: kotlin.jvm.functions.Function0 $afterApiCall
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.otpless.web.NativeWebManager: boolean isWebHandShakeDone
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String region
com.otpless.R$string: int otpless_loading
com.otpless.dto.HeadlessRequest: java.lang.String email
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.otpless.web.OtplessWebView: java.lang.String JAVASCRIPT_OBJ
com.otpless.utils.EventConstant: java.lang.String REQUEST_PUSHED_WEB
com.otpless.network.OtplessRepository$requestSnaAsync$1: kotlin.jvm.functions.Function1 $callback
com.google.android.gms.common.api.GoogleApi: int zah
com.otpless.network.ONetworkStatus: com.otpless.network.ONetworkStatus NONE
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.otpless.network.OtplessConnectivityManager: com.otpless.network.OtplessConnectivityManager$Companion Companion
com.otpless.network.OtplessNetworkManager: android.os.Handler mDelayHandler
com.google.android.gms.auth.api.credentials.CredentialsApi: int ACTIVITY_RESULT_OTHER_ACCOUNT
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType GITLAB
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
com.otpless.main.WhatsappOtpReaderImpl$incomingIntentHandler$2: com.otpless.main.WhatsappOtpReaderImpl$incomingIntentHandler$2 INSTANCE
com.google.android.gms.common.server.converter.zaa: android.os.Parcelable$Creator CREATOR
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType BITBUCKET
com.otpless.network.OtplessCellularNetworkImpl$connectivityManager$2: com.otpless.network.OtplessCellularNetworkImpl this$0
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbb
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$job$1: kotlin.jvm.internal.Ref$ObjectRef $apiResult
com.otpless.utils.EventConstant: java.lang.String NEW_INTENT
com.google.android.gms.auth.api.credentials.Credential$Builder: java.util.List zbd
com.otpless.network.OtplessRepository$pushEventService$2: com.otpless.network.OtplessRepository$pushEventService$2 INSTANCE
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: int zba
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
com.otpless.network.OtplessCellularNetworkImplV2$openWithDataCellular$1: com.otpless.network.OtplessCellularDataListener $callback
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.HashMap perImageReaders
com.google.android.gms.auth.api.credentials.CredentialsOptions: com.google.android.gms.auth.api.credentials.CredentialsOptions DEFAULT
androidx.datastore.preferences.PreferencesProto$Value: int STRING_FIELD_NUMBER
com.otpless.main.OtplessViewImpl: boolean isPushedToWebHr
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.Parser PARSER
com.otpless.network.OtplessRepository$makeConnection$1: int label
com.otpless.web.NativeWebManager$2: com.otpless.web.NativeWebManager this$0
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.otpless.main.PhoneHintLauncherType: com.otpless.main.PhoneHintLauncherType GoogleCredential
com.google.android.gms.auth.api.credentials.Credential$Builder: java.lang.String zbg
com.otpless.main.OtplessViewImpl: android.os.CountDownTimer countDownTimer
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$1: java.lang.Object result
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.IdentityProviders: java.lang.String YAHOO
com.otpless.config.Configuration: com.otpless.config.Configuration INSTANCE
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.otpless.R$dimen: int progress_bar_size
com.google.android.gms.internal.auth-api.zbu: android.os.Parcelable$Creator CREATOR
com.otpless.config.OtplessParamKey: java.lang.String IS_WEB_AUTHN_SUPPORTED
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.otpless.main.OtplessViewImpl: java.lang.String trackingSessionId
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$pushEventAsync$2: int label
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Internal$ProtobufList strings_
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedWidth
com.otpless.BuildConfig: java.lang.String OTPLESS_VERSION_NAME
com.otpless.config.OtplessParamKey: java.lang.String IS_GMAIL_SDK_SUPPORTED
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1: com.otpless.network.OtplessCellularNetworkImpl this$0
com.google.android.gms.auth.api.credentials.HintRequest$Builder: java.lang.String[] zbc
com.otpless.network.ONetworkType: com.otpless.network.ONetworkType[] $VALUES
com.otpless.dto.OtpDeliveryChannel: java.lang.String channelName
com.otpless.utils.OtplessUtility: com.otpless.utils.OtplessUtility INSTANCE
com.otpless.utils.Utility: java.util.List messagingAppPackageList
androidx.transition.ChangeBounds$6: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.otpless.utils.Utility: java.text.SimpleDateFormat dateFormatter
com.google.android.gms.auth.api.credentials.HintRequest: boolean zbc
com.otpless.web.OtplessWebView: com.otpless.web.LoadingStatus mLoadingState
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastDequeueTime
com.otpless.R$dimen: int button_padding_horizontal
com.otpless.network.OtplessRepository$snaService$2: com.otpless.network.OtplessRepository$snaService$2 INSTANCE
com.otpless.network.OtplessRepository$makeConnection$job$1: int label
com.otpless.dto.HeadlessChannel: com.otpless.dto.HeadlessChannel PHONE
com.otpless.R$styleable: int WhatsappLoginButton_otplessTextSize
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.PreferencesProto$Value DEFAULT_INSTANCE
com.otpless.utils.EventConstant: java.lang.String CLOSE_VIEW
com.otpless.utils.EventConstant: java.lang.String SMS_OTP_AUTOREAD_TIMEOUT
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.otpless.main.OtplessViewImpl: java.lang.String VIEW_TAG_NAME
com.google.android.gms.auth.api.credentials.HintRequest$Builder: java.lang.String zbg
com.otpless.main.OtplessManager: com.otpless.main.OtplessManager sInstance
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.otpless.web.LoadingStatusData: int errorCode
com.otpless.network.OtplessRepository: okhttp3.OkHttpClient mOkHttpClient
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.android.gms.fido.fido2.api.common.AttestationConveyancePreference: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$requestSnaAsync$1: java.lang.Object L$0
com.otpless.utils.EventConstant: java.lang.String HEADLESS_NULL_LOAD_URL
com.otpless.network.ONetworkType: com.otpless.network.ONetworkType CELLULAR
com.otpless.dto.OtpLength: com.otpless.dto.OtpLength FOUR
com.otpless.utils.EventConstant: java.lang.String WEBVIEW_URL_LOAD_FAIL
com.google.android.gms.common.server.response.SafeParcelResponse: android.os.Parcelable$Creator CREATOR
com.otpless.utils.EventConstant: java.lang.String HEADLESS_MERCHANT_COMMIT
com.otpless.network.OtplessConnectivityManager: int TIME_OUT
androidx.datastore.preferences.PreferencesProto$Value: int STRING_SET_FIELD_NUMBER
com.otpless.network.OtplessConnectivityManager: kotlin.jvm.functions.Function1 pendingCallback
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.otpless.main.OtplessViewImpl: java.lang.ref.WeakReference wContainer
com.otpless.utils.Utility: java.lang.String TRUE_CALLER_PACKAGE_NAME
com.otpless.network.OtplessCellularNetworkImplV2$telephonyService$2: com.otpless.network.OtplessCellularNetworkImplV2 this$0
com.otpless.utils.EventConstant: java.lang.String DEEPLINK_WEB
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Prompt: int SIGN_IN
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: int zbd
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CompletedExceptionally: int _handled
com.otpless.utils.OtplessPhoneHintManagerImpl: kotlin.jvm.functions.Function1 hintResultCallback
com.otpless.network.OtplessCellularNetworkImpl: kotlin.Lazy connectivityManager$delegate
com.otpless.main.OtplessViewImpl: java.lang.String BASE_LOADING_URL
com.otpless.network.OtplessRepository: com.otpless.network.OtplessRepository INSTANCE
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
com.otpless.R$drawable: int bg_snack_bar_no_internet
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
com.otpless.utils.EventConstant: java.lang.String WEB_HANDSHAKE_FALSE
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig zbc
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: boolean zbc
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.otpless.network.OtplessRepository$pushEventAsync$1$1: com.otpless.tesseract.ApiData $response
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.otpless.utils.EventConstant: java.lang.String HEADLESS_RESPONSE_WEB
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.otpless.views.OtplessContainerView: com.otpless.web.NativeWebManager webManager
com.otpless.network.OtplessRepository$pushEvent$1: int label
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessNetworkManager: java.lang.String CONNECTIVITY_CHANGE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.otpless.utils.EventConstant: java.lang.String WEBVIEW_URL_LOAD_SUCCESS
io.flutter.embedding.engine.FlutterJNI: float displayHeight
com.otpless.utils.EventConstant: java.lang.String WEBVIEW_ADDED
com.otpless.R$drawable: int ic_retry_otpless
com.otpless.network.OtplessRepository$pushEvent$data$1: int label
com.otpless.dto.HeadlessRequest: java.lang.String otp
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.MapFieldLite preferences_
com.otpless.utils.EventConstant: java.lang.String INIT_HEADLESS
com.otpless.dto.OtpLength: com.otpless.dto.OtpLength SIX
com.google.android.gms.auth.api.accounttransfer.zzw: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.otpless.network.OtplessRepository$pushEventAsync$2: kotlin.jvm.functions.Function1 $apiCallback
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.otpless.tesseract.SecureAnalysisError: java.lang.String requestCode
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.otpless.views.OtplessContainerView: android.widget.ProgressBar mOtplessProgress
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.otpless.utils.Utility: java.util.HashMap mAdditionalAppInfo
com.google.android.gms.auth.api.credentials.HintRequest$Builder: boolean zbe
com.google.android.gms.auth.api.accounttransfer.DeviceMetaData: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id
com.otpless.BuildConfig: java.lang.String BUILD_TYPE
com.otpless.config.Configuration: java.lang.String URL_CACHE_EPOCH
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean notifiedDestroy
com.google.android.gms.fido.fido2.api.common.zzab: android.os.Parcelable$Creator CREATOR
com.otpless.utils.OtpResult: boolean isSuccess
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.otpless.utils.OtpResult: int STATUS_SUCCESS
com.otpless.main.OtplessViewImpl$1: com.otpless.main.OtplessViewImpl this$0
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.otpless.R$id: int otpless_info_tv
com.otpless.main.HeadlessInitState: com.otpless.main.HeadlessInitState POST_RECREATED
com.otpless.views.OtplessLoaderEvent: com.otpless.views.OtplessLoaderEvent RETRY
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int MEMOIZED_SERIALIZED_SIZE_MASK
com.otpless.utils.Utility: java.lang.String DISCORD_PACKAGE_NAME
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType GMAIL
com.otpless.R$styleable: int[] WhatsappLoginButton
com.otpless.utils.OtpReaderReceiver: java.lang.String OTP_PATTERN
com.otpless.main.WhatsappOtpReaderImpl: android.app.Activity activity
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.otpless.main.OtplessViewImpl: com.otpless.authfusion.FacebookSignInSdk facebookSignInSdk
com.otpless.network.OtplessRepository$makeConnection$$inlined$CoroutineExceptionHandler$1: kotlin.jvm.internal.Ref$ObjectRef $apiResult$inlined
io.flutter.embedding.engine.FlutterJNI: float displayWidth
com.otpless.views.OtplessLoaderEvent: com.otpless.views.OtplessLoaderEvent CLOSE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean createNewReader
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String endPointUrl
com.otpless.dto.OtpDeliveryChannel: com.otpless.dto.OtpDeliveryChannel SMS
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.GoogleApi: android.os.Looper zag
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.otpless.dto.HeadlessChannel: com.otpless.dto.HeadlessChannel[] $VALUES
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int MAX_IMAGES
com.google.android.gms.auth.api.accounttransfer.zzo: android.os.Parcelable$Creator CREATOR
com.otpless.main.OtplessManager: java.util.HashSet providedViewSet
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.IdToken: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$warmupSna$1$1: long J$0
com.otpless.network.ONetworkType: com.otpless.network.ONetworkType NONE
com.otpless.dto.Tuple: java.lang.Object first
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.android.gms.fido.fido2.api.common.AuthenticatorAssertionResponse: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1$1: java.lang.String $it
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean CLEANUP_ON_MEMORY_PRESSURE
com.otpless.tesseract.sim.SimDetailProvider: android.content.Context context
com.otpless.main.OtplessViewImpl: boolean isLoaderVisible
com.otpless.R$color: int black
com.otpless.utils.EventConstant: java.lang.String GOOGLE_SDK_WEB
com.otpless.main.PhoneHintLauncherType: com.otpless.main.PhoneHintLauncherType[] $VALUES
com.otpless.utils.EventConstant: java.lang.String LOGINPAGE_RESPONSE_WEB
com.otpless.utils.OnceUseProp: java.lang.Object data
com.otpless.dto.OtplessRequest: java.util.HashMap mExtras
com.google.android.gms.auth.AccountChangeEvent: android.os.Parcelable$Creator CREATOR
com.otpless.R$color: int white
com.otpless.main.OtplessViewImpl: com.otpless.main.OtplessEventCallback eventCallback
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.otpless.utils.Utility: java.lang.String TELEGRAM_APP_PACKAGE_NAME
com.otpless.main.OtplessViewImpl: java.lang.String appId
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder: java.lang.Boolean zba
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.gms.fido.fido2.api.common.AuthenticatorSelectionCriteria: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.HintRequest: boolean zbd
com.otpless.network.OtplessRepository$makeConnection$job$1: kotlin.jvm.functions.Function1 $dataCallback
com.otpless.main.OtplessViewImpl: boolean isRetryVisible
com.google.android.gms.auth.AccountChangeEventsResponse: android.os.Parcelable$Creator CREATOR
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType LINEAR
com.otpless.dto.HeadlessChannel: java.lang.String channelName
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
com.google.android.gms.auth.api.credentials.Credential$Builder: java.lang.String zba
com.otpless.main.OtplessViewImpl: com.otpless.utils.OnceUseProp ssoSdkLowMemData
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
com.otpless.utils.EventConstant: java.lang.String WHATSAPP_OTP_AUTOREAD_START_WEB_ONETAP
com.google.android.gms.fido.fido2.api.common.zzay: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fido.fido2.api.common.AuthenticationExtensions: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
kotlin.jvm.internal.FunctionReference: int arity
com.google.android.gms.auth.api.credentials.CredentialRequest: com.google.android.gms.auth.api.credentials.CredentialPickerConfig zbd
com.otpless.utils.OtplessUtility: java.lang.String deviceInfoString
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean VERBOSE_LOGS
com.otpless.utils.EventConstant: java.lang.String HEADLESS_REQUEST_NULL_ON_TIMER_FINISHED
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.otpless.dto.HeadlessResponse: org.json.JSONObject response
com.otpless.main.OtplessViewImpl: java.lang.String installId
androidx.datastore.preferences.PreferencesProto$Value: java.lang.Object value_
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
com.otpless.dto.OtpDeliveryChannel: com.otpless.dto.OtpDeliveryChannel[] $VALUES
com.otpless.utils.EventConstant: java.lang.String WHATSAPP_OTP_AUTOREAD_START_WEB_ZEROTAP
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.otpless.network.OtplessRepository$requestSnaAsync$1$1: kotlin.jvm.functions.Function1 $callback
com.otpless.otplessflutter.OtplessFlutterPlugin: java.lang.String Tag
androidx.datastore.preferences.PreferencesProto$Value: int BOOLEAN_FIELD_NUMBER
com.google.android.gms.auth.api.credentials.Credential$Builder: java.lang.String zbe
com.otpless.config.OtplessParamKey: java.lang.String IS_SILENT_AUTH_SUPPORTED
com.otpless.network.OtplessNetworkManager: android.content.BroadcastReceiver mNetworkReceiver
com.google.android.gms.auth.api.identity.SaveAccountLinkingTokenResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.identity.SavePasswordResult: android.os.Parcelable$Creator CREATOR
com.otpless.utils.OtplessPhoneHintManagerImpl: androidx.activity.result.ActivityResultLauncher fallbackPhoneNumberHintIntentResultLauncher
com.otpless.R$color: int otpless_transparent
com.google.android.gms.common.server.response.zal: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int UNINITIALIZED_SERIALIZED_SIZE
com.otpless.tesseract.SecureAnalysisShdRequest: java.lang.String apiKey
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean ignoringFence
com.google.android.gms.fido.fido2.api.common.COSEAlgorithmIdentifier: android.os.Parcelable$Creator CREATOR
com.otpless.main.OtplessManager: boolean isViewRemovalNotifierEnabled
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.otpless.dto.HeadlessRequest: com.otpless.dto.HeadlessChannel channel
com.otpless.network.OtplessCellularNetworkImpl: android.content.Context context
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.otpless.tesseract.SecureAnalysisSuccess: org.json.JSONObject data
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.otpless.views.OtplessContainerView: com.otpless.web.OtplessWebView webView
com.otpless.utils.OtplessPhoneHintManagerImpl: android.app.Activity mActivity
com.google.android.gms.auth.api.credentials.HintRequest$Builder: boolean zbb
com.otpless.dto.OtplessResponse: org.json.JSONObject data
com.otpless.network.OtplessConnectivityManager: android.net.ConnectivityManager connectivityManager
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1: java.lang.String $url
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.otpless.tesseract.ApiData$Error: com.otpless.tesseract.ApiException throwable
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.auth-api.zbp: android.os.Parcelable$Creator CREATOR
com.otpless.R$anim: int otpless_slide_up_anim
com.otpless.web.NativeWebManager: boolean mBackSubscription
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: boolean zbb
com.otpless.main.OtplessZeroTapReceiver: com.otpless.main.OtplessZeroTapReceiver$Companion Companion
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1: com.otpless.network.OtplessCellularDataListener $callback
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.otpless.config.OtplessParamKey: java.lang.String IS_CELLULAR_DATA_ENABLED
com.google.android.gms.fido.fido2.api.common.AuthenticationExtensionsClientOutputs: android.os.Parcelable$Creator CREATOR
com.otpless.utils.EventConstant: java.lang.String WHATSAPP_OTP_AUTOREAD_ERROR
com.otpless.main.OtplessEventData: int eventCode
com.google.android.gms.fido.fido2.api.common.ResidentKeyRequirement: android.os.Parcelable$Creator CREATOR
com.otpless.web.LoadingStatus: com.otpless.web.LoadingStatus Failed
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: boolean zba
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType GITHUB
com.google.android.gms.auth.api.credentials.CredentialRequest: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.otpless.network.OtplessRepository$warmupSna$1$1: kotlin.Lazy $snaService$delegate
com.otpless.network.OtplessCellularNetworkImplV2: com.otpless.network.OtplessConnectivityManager connectivityManager
com.google.android.gms.auth.api.credentials.IdentityProviders: java.lang.String GOOGLE
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.otpless.network.OtplessRepository$pushEventAsync$1: java.lang.Object L$0
com.otpless.utils.EventConstant: java.lang.String HEADLESS_REQUEST_QUERY_WEB
com.otpless.tesseract.SecureAnalysisError: java.lang.Exception error
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.google.android.gms.common.api.Response: com.google.android.gms.common.api.Result zza
com.google.android.gms.common.api.GoogleApi: android.content.Context zab
com.otpless.R$color: int otpless_gray
com.otpless.web.WebJsInterface: com.otpless.web.OtplessWebListener mListener
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
com.otpless.utils.OtplessPhoneHintManagerImpl$showPhoneNumberHint$1$1: com.otpless.utils.OtplessPhoneHintManagerImpl this$0
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.otpless.R$layout: int otpless_content_view
com.otpless.main.WhatsappOtpReaderImpl: java.lang.Boolean isHandshakeSupported
androidx.datastore.preferences.PreferencesProto$Value: int FLOAT_FIELD_NUMBER
com.google.android.gms.auth.api.credentials.Credential: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$warmupSna$1: java.lang.String[] $urls
com.otpless.views.OtplessContainerView: com.otpless.main.OtplessViewContract viewContract
com.google.android.gms.auth.api.credentials.Credential: android.net.Uri zbc
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$snaService$2: android.net.Network $it
com.otpless.network.OtplessRepository$warmupSna$1$1: java.lang.String[] $urls
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1$1: com.otpless.network.OtplessCellularDataListener $callback
com.otpless.utils.EventConstant: java.lang.String HEADLESS_TIMEOUT
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.otpless.network.OtplessCellularNetworkImplV2: android.content.Context context
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1: kotlin.jvm.functions.Function1 $callback
com.otpless.tesseract.sim.OtplessSimStateReceiverKt: java.lang.String PREF_NAME
com.otpless.R$dimen: int otpless_btn_top_margin
com.otpless.dto.OtpLength: com.otpless.dto.OtpLength[] $VALUES
com.otpless.utils.EventConstant: java.lang.String SNA_CALLBACK_RESULT
com.otpless.R$style: int Theme_Otpless_NoActionBar
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbf
com.otpless.utils.OtpReaderManager: com.otpless.utils.OtpResultListener resultListener
androidx.datastore.preferences.PreferencesProto$Value: int BYTES_FIELD_NUMBER
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: kotlin.jvm.functions.Function1 $callback
com.otpless.network.OtplessRepository$makeConnection$job$1: kotlin.jvm.internal.Ref$ObjectRef $apiResult
com.otpless.dto.OtpDeliveryChannel: com.otpless.dto.OtpDeliveryChannel PHONE_CALL
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$job$1: int label
com.otpless.network.OtplessRepository$pushEventAsync$1: int label
com.google.android.gms.fido.fido2.api.common.UvmEntries: android.os.Parcelable$Creator CREATOR
com.otpless.main.HeadlessInitState: com.otpless.main.HeadlessInitState INSTANCE_RESTORED
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1: java.lang.String $it
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$1: int label
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.otpless.views.OtplessContainerView: boolean isToShowLoader
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.otpless.R$color: int semi_transparent_gray
com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig zbd
com.otpless.network.NetworkStatusData: com.otpless.network.ONetworkType type
com.otpless.utils.OtpReaderManager: com.otpless.utils.OtpReaderReceiver otpReader
com.otpless.main.WhatsappOtpReaderImpl: kotlin.jvm.functions.Function1 callback
com.otpless.R$xml: int otpless_network_security_config
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig zbd
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.Object lock
com.otpless.web.NativeWebManager: com.otpless.web.OtplessWebView mWebView
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.otpless.dto.HeadlessRequest: java.lang.String channelType
com.otpless.web.NativeWebManager: com.otpless.tesseract.sim.SimDetailProvider simDetailProvider
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.otpless.main.HeadlessInitState: com.otpless.main.HeadlessInitState NONE
com.otpless.otplessflutter.OtplessFlutterPlugin: com.otpless.main.OtplessView otplessView
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType LINKEDIN
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$$inlined$CoroutineExceptionHandler$1: kotlin.jvm.internal.Ref$ObjectRef $apiResult$inlined
com.otpless.R$attr: int otpless_link
com.otpless.main.OtplessManager: com.otpless.main.OtplessViewRemovalNotifier viewRemovalNotifier
com.otpless.BuildConfig: boolean DEBUG
com.otpless.tesseract.sim.OtplessSimStateReceiverApi: kotlin.jvm.functions.Function1 onSimStateChange
com.otpless.config.Configuration: java.lang.String OtplessPreferenceStore
com.otpless.web.NativeWebManager: com.otpless.main.NativeWebListener nativeWebListener
androidx.datastore.preferences.protobuf.AbstractMessageLite: int memoizedHashCode
com.otpless.tesseract.SimStateEntry: java.lang.String state
com.otpless.network.OtplessRepository$pushEvent$1: java.lang.Object result
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.otpless.R$dimen: int button_padding_vertical
com.google.android.gms.auth.api.credentials.CredentialRequest: int zba
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.otpless.otplessflutter.OtplessFlutterPlugin: com.otpless.otplessflutter.OtplessFlutterPlugin$Companion Companion
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$1: kotlin.jvm.functions.Function1 $callback
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: java.lang.String zbb
com.otpless.utils.Utility: java.lang.String LINE_APP_PACKAGE_NAME
com.google.android.gms.fido.fido2.api.common.zzu: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.PreferencesProto$StringSet: int STRINGS_FIELD_NUMBER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.google.android.gms.auth.api.proxy.ProxyResponse: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessConnectivityManager: android.net.Network availableNetwork
com.google.android.gms.fido.fido2.api.common.ErrorCode: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.otpless.network.OtplessRepository$warmupSna$1$1: java.lang.Object L$0
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: boolean zbb
com.google.android.gms.fido.fido2.api.common.UserVerificationMethodExtension: android.os.Parcelable$Creator CREATOR
com.otpless.tesseract.sim.OtplessSimStateReceiverKt: java.lang.String SIM_EJECTION_ENTRY_KEY
com.otpless.web.OtplessWebView$OtplessWebClient: com.otpless.web.OtplessWebView this$0
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1$1: int label
com.otpless.utils.OtpReaderReceiver: com.otpless.utils.OtpResultListener resultListener
com.otpless.R$color: int otpless_default_loader
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.otpless.dto.Triple: java.lang.Object third
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean ignoringFence
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.otpless.network.OtplessNetworkManager: com.otpless.network.NetworkStatusData mStatusData
com.otpless.main.OtplessViewImpl: com.otpless.dto.OtplessRequest mOtplessRequest
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.otpless.network.OtplessRepository$pushEventAsync$1: kotlin.jvm.functions.Function1 $apiCallback
com.google.android.gms.fido.fido2.api.common.zzz: android.os.Parcelable$Creator CREATOR
com.otpless.R$id: int otpless_retry_btn
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.otpless.main.OtplessViewImpl: com.otpless.authfusion.GoogleCredentialSdk googleSignInSdk
com.otpless.R$attr: int otplessCornerRadius
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.HintRequest: boolean zbf
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
com.otpless.utils.Utility: java.lang.String MI_CHAT_APP_PACKAGE_NAME
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType WHATSAPP
com.google.android.gms.auth.api.credentials.HintRequest: com.google.android.gms.auth.api.credentials.CredentialPickerConfig zbb
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: boolean zba
com.google.android.gms.auth.api.credentials.IdentityProviders: java.lang.String MICROSOFT
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType GOOGLE_SDK
com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims
com.otpless.dto.HeadlessRequest: int expiry
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
com.google.android.gms.auth.api.accounttransfer.zzs: android.os.Parcelable$Creator CREATOR
com.otpless.utils.EventConstant: java.lang.String START_HEADLESS
com.otpless.R$id: int otpless_close_tv
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.otpless.dto.HeadlessChannelType: java.lang.String channelTypeName
com.otpless.utils.EventConstant: java.lang.String HEADLESS_REQUEST
com.otpless.R$string: int otpless_sna_optimization_data
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType FACEBOOK_SDK
com.otpless.main.OtplessViewImpl: boolean isHeadless
com.otpless.network.OtplessCellularNetworkImplV2: kotlin.Lazy telephonyService$delegate
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType LINE
com.otpless.web.OtplessWebViewWrapper: com.otpless.web.OtplessWebView mWebView
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType MICROSOFT
com.otpless.R$drawable: int otpless_secondary_btn_bg
com.otpless.tesseract.SecureAuthDetail: java.lang.String token
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: kotlin.Lazy $snaService$delegate
com.otpless.utils.OtpResult: int STATUS_ERROR
com.otpless.R$id: int otpless_progress_bar
com.otpless.otplessflutter.OtplessFlutterPlugin: io.flutter.plugin.common.MethodChannel channel
com.otpless.web.LoadingStatus: com.otpless.web.LoadingStatus[] $VALUES
com.otpless.network.OtplessRepository$warmupSna$1$snaService$2: android.net.Network $it
com.otpless.main.OtplessViewImpl: boolean backSubscription
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
com.otpless.R$id: int otpless_no_internet_tv
com.otpless.dto.OtpLength: int size
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.IdentityProviders: java.lang.String LINKEDIN
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1$1: kotlin.Lazy $snaService$delegate
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.ApiKey zaf
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialParameters: android.os.Parcelable$Creator CREATOR
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType NOTION
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: com.google.android.gms.auth.api.Auth$AuthCredentialsOptions zba
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType FACEBOOK
com.otpless.network.OtplessNetworkManager$2: com.otpless.network.OtplessNetworkManager this$0
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.otpless.utils.EventConstant: java.lang.String SET_LOGIN_PAGE_CALLBACK
com.otpless.main.OtplessViewImpl: boolean isContainerViewInvisible
com.otpless.dto.HeadlessRequest: com.otpless.dto.OtpLength otpLength
io.flutter.embedding.engine.FlutterJNI: float displayDensity
com.otpless.network.OtplessRepository$requestSnaAsync$1$1: int label
com.otpless.network.OtplessCellularNetworkImpl: kotlin.Lazy cellularInfo$delegate
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType SLACK
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1: java.lang.String $url
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.otpless.R$string: int otpless_close
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.otpless.network.OtplessCellularNetworkImpl: com.otpless.network.OtplessCellularNetworkImpl$Companion Companion
com.otpless.utils.EventConstant: java.lang.String LOAD_URL
com.otpless.network.NetworkStatusData: com.otpless.network.ONetworkStatus status
com.otpless.dto.HeadlessResponse: int statusCode
com.otpless.views.OtplessLoaderEvent: com.otpless.views.OtplessLoaderEvent[] $VALUES
com.google.android.gms.auth.api.credentials.HintRequest: int zba
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
com.otpless.main.OtplessEventCode: int BACK_PRESSED
com.otpless.R$string: int otpless_retry
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType DISCORD
com.otpless.main.OtplessViewImpl: com.otpless.views.OtplessUserDetailCallback detailCallback
com.google.android.gms.common.server.response.zam: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.ArrayDeque imageReaderQueue
com.otpless.dto.HeadlessRequest: java.util.Locale locale
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.otpless.network.ONetworkStatus: com.otpless.network.ONetworkStatus ENABLED
com.otpless.utils.Utility: java.lang.String SLACK_PACKAGE_NAME
com.otpless.utils.OtpReaderManager: com.otpless.utils.OtpReaderManager INSTANCE
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api$ApiOptions zae
com.otpless.views.OtplessContainerView: android.widget.TextView mCloseTv
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.otpless.network.OtplessRepositoryKt: java.lang.String PUSH_EVENT_URL
com.otpless.main.OtplessEventData: org.json.JSONObject data
androidx.datastore.preferences.protobuf.GeneratedMessageLite: androidx.datastore.preferences.protobuf.UnknownFieldSetLite unknownFields
com.otpless.tesseract.sim.OtplessSimStateReceiverApi: com.otpless.tesseract.sim.OtplessSimStateReceiverApi INSTANCE
com.google.android.gms.auth.api.credentials.Credential$Builder: java.lang.String zbh
com.otpless.main.OtplessViewImpl: com.otpless.utils.OtplessPhoneHintManager phoneHintManager
com.otpless.utils.EventConstant: java.lang.String SMS_OTP_AUTOREAD_STOP_WEB
com.otpless.web.NativeWebManager: com.otpless.network.OtplessCellularNetwork otplessCellularNetwork
com.otpless.utils.EventConstant: java.lang.String SHOW_PHONE_HINT
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: boolean zbe
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom
com.otpless.R$color: int otpless_primary
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.datastore.preferences.PreferencesProto$Value: int LONG_FIELD_NUMBER
com.otpless.network.OtplessRepository$makeConnection$1: com.otpless.network.OtplessRepository this$0
com.otpless.utils.OtpResult: java.lang.String otp
com.otpless.web.LoadingStatusData: java.lang.String description
com.otpless.network.OtplessCellularNetworkImplV2$openWithDataCellular$1: com.otpless.network.OtplessCellularNetworkImplV2 this$0
com.otpless.main.OtplessViewImpl: java.lang.String loginUri
com.otpless.web.LoadingStatus: com.otpless.web.LoadingStatus InProgress
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
com.google.android.gms.fido.fido2.api.common.AuthenticatorAttestationResponse: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
com.otpless.utils.OtplessUtility$WhenMappings: int[] $EnumSwitchMapping$0
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.protobuf.Parser PARSER
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.otpless.views.OtplessContainerView: android.widget.Button mRetryButton
com.otpless.dto.OtpDeliveryChannel: com.otpless.dto.OtpDeliveryChannel WHATSAPP
com.otpless.web.OtplessWebView: java.lang.String mLoadingUrl
com.otpless.dto.OtplessRequest: java.lang.String uxmode
com.otpless.main.OtplessViewImpl: com.otpless.network.OtplessConnectivityManager connectivityManager
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.otpless.web.LoadingStatus: com.otpless.web.LoadingStatus Started
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.otpless.web.OtplessWebView: com.otpless.web.PageLoadStatusCallback pageLoadStatusCallback
com.otpless.main.OtplessWebAuthnManagerImpl: int BASE64_FLAG
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1: int label
com.otpless.main.OtplessViewImpl: com.otpless.tesseract.OtplessSecureService secureService
com.google.android.gms.auth.api.credentials.CredentialRequest: boolean zbf
com.otpless.dto.HeadlessChannel: com.otpless.dto.HeadlessChannel EMAIL
com.otpless.utils.Utility: java.lang.String mAppSign
com.otpless.main.HeadlessInitState: com.otpless.main.HeadlessInitState[] $VALUES
com.otpless.network.OtplessNetworkManager: com.otpless.network.OtplessNetworkManager instance
com.otpless.main.OtplessManager$ActivityLifeManager: com.otpless.main.OtplessManager this$0
com.otpless.utils.EventConstant: java.lang.String SHOW_LOGIN_PAGE
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessRepository$makeConnection$1: java.lang.Object L$0
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: java.lang.String $url
com.otpless.tesseract.SimStateEntry: long transactionTime
com.otpless.utils.EventConstant: java.lang.String SMS_OTP_AUTOREAD_OTP_NOT_FOUND
com.google.android.gms.fido.fido2.api.common.UvmEntry: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
com.otpless.dto.HeadlessChannel: com.otpless.dto.HeadlessChannel OAUTH
com.otpless.network.OtplessRepository$pushEventAsync$2: kotlin.jvm.functions.Function0 $callback
com.google.android.gms.auth.api.credentials.CredentialRequest: com.google.android.gms.auth.api.credentials.CredentialPickerConfig zbe
com.otpless.utils.OtpResult: int STATUS_TIMEOUT
com.otpless.network.OtplessRepository$warmupSna$1: android.content.SharedPreferences $sharedPref
com.otpless.utils.OtplessPhoneHintManagerImpl: int OTPLESS_PHONE_HINT_REQUEST
com.otpless.R$id: int otpless_web_wrapper
com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType: android.os.Parcelable$Creator CREATOR
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$$inlined$schedule$1: kotlin.jvm.functions.Function2 $onCompletion$inlined
com.google.android.gms.auth.api.credentials.CredentialRequest: boolean zbi
com.google.android.gms.auth.api.credentials.Credential$Builder: java.lang.String zbf
kotlin.jvm.internal.FunctionReference: int flags
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1: int label
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.android.gms.auth.api.identity.BeginSignInResult: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean released
com.otpless.web.NativeWebManager: com.otpless.main.WebActivityContract contract
com.otpless.utils.OtpResult: int statusCode
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: java.lang.String zbf
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int MUTABLE_FLAG_MASK
com.otpless.network.OtplessRepository$requestSna$2: java.lang.String $url
com.otpless.main.OtplessViewImpl: com.otpless.main.WhatsappOtpReader mWhatsappOtpReader
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$1$1: com.otpless.network.OtplessCellularNetworkImpl this$0
com.google.android.gms.fido.fido2.api.common.PublicKeyCredential: android.os.Parcelable$Creator CREATOR
com.otpless.utils.EventConstant: java.lang.String ACTIVITY_RESULT
com.otpless.R$id: int otpless_loader_container_fl
com.otpless.utils.Utility: java.lang.String HASHING_ALGO
com.otpless.views.OtplessContainerView: android.widget.FrameLayout parentVg
com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.zaj CREATOR
androidx.datastore.preferences.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.otpless.utils.EventConstant: java.lang.String HEADLESS_EMPTY_RESPONSE_WEB
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.otpless.network.OtplessCellularNetworkImpl: android.net.ConnectivityManager$NetworkCallback cellularNetworkCallBack
com.google.android.gms.auth.api.credentials.HintRequest: java.lang.String zbh
com.otpless.network.OtplessCellularNetworkImpl: long TIME_OUT
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.PreferencesProto$PreferenceMap DEFAULT_INSTANCE
com.otpless.utils.OtplessPhoneHintManagerImpl$showPhoneNumberHint$1$1: kotlin.jvm.functions.Function1 $callback
com.otpless.network.OtplessRepository$pushEventAsync$1$1: kotlin.jvm.functions.Function1 $apiCallback
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.auth.api.credentials.HintRequest$Builder: java.lang.String zbf
com.google.android.gms.auth.api.credentials.IdentityProviders: java.lang.String FACEBOOK
com.otpless.R$id: int otpless_parent_vg
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.otpless.tesseract.ApiException: org.json.JSONObject responseJson
com.otpless.authfusion.AuthFusionManager: boolean isDebugLogging
com.otpless.network.OtplessRepository$warmupSna$1$1: android.content.SharedPreferences $sharedPref
com.otpless.network.OtplessRepository$warmupSna$1$1: java.lang.Object L$2
com.google.android.gms.common.server.converter.StringToIntConverter: android.os.Parcelable$Creator CREATOR
com.otpless.network.ONetworkType: com.otpless.network.ONetworkType WIFI
com.otpless.config.Configuration: boolean PRE_CACHE_ENABLE
androidx.datastore.preferences.PreferencesProto$Value: int INTEGER_FIELD_NUMBER
com.google.android.gms.auth.api.credentials.Credential: java.util.List zbd
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1: kotlin.Lazy $snaService$delegate
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType TWITTER
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1: android.net.Uri $url
com.otpless.main.OtplessWebAuthnManagerImpl: android.app.Activity activity
com.otpless.utils.EventConstant: java.lang.String JS_INJECT
com.google.android.gms.fido.fido2.api.common.FidoAppIdExtension: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fido.fido2.api.common.TokenBinding$TokenBindingStatus: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
kotlinx.coroutines.channels.BufferedChannel: long receivers
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
com.otpless.network.OtplessNetworkManager$1: com.otpless.network.OtplessNetworkManager this$0
com.otpless.dto.Tuple: java.lang.Object second
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Prompt: int CONTINUE
com.otpless.main.OtplessViewImpl: com.otpless.main.HeadlessResponseCallback headlessResponseCallback
com.google.android.gms.auth.api.credentials.IdentityProviders: java.lang.String TWITTER
com.otpless.config.OtplessParamKey: java.lang.String IS_FACEBOOK_SDK_SUPPORTED
com.otpless.main.OtplessEventCode: int NO_INTERNET
com.otpless.R$styleable: int WhatsappLoginButton_otpless_link
com.google.android.gms.auth.api.credentials.Credential$Builder: android.net.Uri zbc
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastQueueTime
com.otpless.network.OtplessRepository$pushEvent$1: com.otpless.network.OtplessRepository this$0
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Parser PARSER
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2: kotlin.jvm.functions.Function2 $onCompletion
com.otpless.main.OtplessViewImpl: long countDownFuture
com.otpless.network.OtplessRepository$makeConnection$1: java.lang.Object result
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
com.google.android.gms.fido.fido2.api.common.zzag: android.os.Parcelable$Creator CREATOR
com.otpless.utils.OtplessPhoneHintManagerImpl: androidx.activity.result.ActivityResultLauncher phoneNumberHintIntentResultLauncher
com.google.android.gms.fido.fido2.api.common.AuthenticatorErrorResponse: android.os.Parcelable$Creator CREATOR
com.otpless.dto.HeadlessRequest: java.lang.String countryCode
com.google.android.gms.auth.api.credentials.IdToken: java.lang.String zbb
com.google.android.gms.auth.api.credentials.CredentialRequest: boolean zbb
com.otpless.web.NativeWebManager: android.app.Activity mActivity
com.otpless.network.OtplessNetworkManager: android.net.ConnectivityManager$NetworkCallback mNetworkCallback
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1$1: com.otpless.network.OtplessCellularNetworkImpl this$0
com.otpless.main.OtplessZeroTapReceiver: java.lang.ref.WeakReference otpReaderImpl
com.google.android.gms.fido.fido2.api.common.zzai: android.os.Parcelable$Creator CREATOR
com.otpless.main.OtplessViewImpl: java.util.Queue helpQueue
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$1$1: kotlin.jvm.functions.Function2 $onCompletion
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType TRUE_CALLER
com.google.android.gms.common.api.GoogleApi: java.lang.String zac
com.google.android.gms.auth.api.credentials.HintRequest: java.lang.String[] zbe
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType ATLASSIAN
com.otpless.main.WhatsappOtpReaderImpl: com.whatsapp.otp.android.sdk.WhatsAppOtpHandler whatsAppOtpHandler
com.otpless.network.OtplessRepository$pushEventAsync$1$1: int label
com.google.android.gms.auth.api.identity.AuthorizationResult: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedHeight
com.otpless.web.LoadingStatus: com.otpless.web.LoadingStatus Success
com.otpless.utils.Utility: java.lang.String SIGNAL_PACKAGE_NAME
com.otpless.utils.Utility: java.lang.String BOTIM_PACKAGE_NAME
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.GoogleApiClient zai
com.otpless.utils.EventConstant: java.lang.String WHATSAPP_OTP_AUTOREAD_SUCCESS
com.google.android.gms.common.internal.zzak: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.otpless.utils.OtpReaderManager: android.content.Context callerContext
com.otpless.network.OtplessNetworkManager: java.util.HashSet listeners
com.otpless.dto.OtplessResponse: java.lang.String errorMessage
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String apiKey
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbe
com.otpless.main.OtplessWebAuthnManagerImpl: int WEBAUTHN_SIGNIN_REQUEST_CODE
com.google.android.gms.auth.api.credentials.IdToken: java.lang.String zba
com.google.android.gms.fido.common.Transport: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.CredentialsApi: int CREDENTIAL_PICKER_REQUEST_CODE
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$1: int label
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.StatusExceptionMapper zaj
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.otpless.main.OtplessViewImpl: com.otpless.main.OtplessViewRemovalNotifier viewRemovalNotifier
com.google.android.gms.auth.api.identity.GetPhoneNumberHintIntentRequest: android.os.Parcelable$Creator CREATOR
com.otpless.dto.HeadlessRequest: java.util.HashMap extras
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
com.otpless.utils.OtplessPhoneHintManagerImpl: com.otpless.utils.OtplessPhoneHintManagerImpl$Companion Companion
com.otpless.network.OtplessRepository$requestSnaAsync$1: java.lang.String $url
com.otpless.dto.HeadlessRequest: com.otpless.dto.OtpDeliveryChannel deliveryChannel
com.otpless.network.OtplessRepository$pushEventAsync$1: java.util.Map $map
com.otpless.utils.EventConstant: java.lang.String SMS_OTP_AUTOREAD_SUCCESS
com.google.android.gms.fido.fido2.api.common.AuthenticationExtensionsCredPropsOutputs: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport: java.lang.Object _state
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbg
com.otpless.web.NativeWebManager$1: com.otpless.web.NativeWebManager this$0
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
com.otpless.dto.OtplessRequest: java.lang.String locale
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.otpless.views.OtplessContainerView: boolean isHeadless
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.otpless.main.PhoneHintLauncherType: com.otpless.main.PhoneHintLauncherType GoogleIdentity
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.otpless.network.OtplessRepository$requestSnaAsync$1: int label
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.GoogleApiManager zaa
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
com.otpless.tesseract.ApiException: int statusCode
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
com.otpless.otplessflutter.OtplessFlutterPlugin: android.app.Activity activity
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: java.lang.String zbd
com.otpless.utils.Utility: java.lang.String VIBER_PACKAGE_NAME
com.otpless.utils.OtplessPhoneHintManagerImpl$Companion: OtplessPhoneHintManagerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.otpless.web.NativeWebManager: void lambda$extraParams$2(org.json.JSONObject)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.google.android.gms.auth.api.credentials.HintRequest: java.lang.String getServerClientId()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
android.support.customtabs.ICustomTabsCallback$Stub: android.support.customtabs.ICustomTabsCallback asInterface(android.os.IBinder)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.otpless.main.OtplessView: void closeView()
androidx.constraintlayout.widget.Barrier: int getMargin()
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
androidx.transition.Transition$Impl26: long getTotalDuration(android.animation.Animator)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder valueOf(java.lang.String)
com.otpless.main.NativeWebListener: com.otpless.main.WhatsappOtpReader getWhatsAppOtpReader()
com.otpless.otplessflutter.OtplessFlutterPlugin: com.otpless.dto.HeadlessRequest parseHeadlessRequest(org.json.JSONObject)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.otpless.otplessflutter.OtplessFlutterPlugin: void onDetachedFromActivityForConfigChanges()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.otpless.main.OtplessViewImpl: void hideContainerView()
com.otpless.utils.Utility: boolean isWhatsAppInstalled(android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.otpless.otplessflutter.OtplessFlutterPlugin: boolean onNewIntent(android.content.Intent)
com.otpless.tesseract.SecureAnalysisResponse: SecureAnalysisResponse(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setCheckableResource(int)
androidx.preference.CheckBoxPreference: CheckBoxPreference(android.content.Context,android.util.AttributeSet)
com.otpless.web.OtplessWebView: void initWebView()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.otpless.web.OtplessWebListener: void warmupUrlCache(java.util.List)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.otpless.utils.Utility: java.util.Map lambda$pushEvent$2(java.lang.String,org.json.JSONObject)
com.otpless.main.OtplessViewImpl$1: void onFinish()
com.otpless.views.OtplessContainerView: void initView(android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.otpless.web.NativeWebManager: void handleEmptyWebResponse(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float,float,float)
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
com.otpless.network.OtplessNetworkManager$2: OtplessNetworkManager$2(com.otpless.network.OtplessNetworkManager)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.google.android.gms.common.internal.IAccountAccessor$Stub: com.google.android.gms.common.internal.IAccountAccessor asInterface(android.os.IBinder)
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType[] $values()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.otpless.web.NativeWebManager$1: void onSuccess(org.json.JSONObject)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
com.otpless.main.OtplessViewImpl: void afterHeadlessRequestPushed()
com.otpless.network.OtplessNetworkManager: void access$100(com.otpless.network.OtplessNetworkManager,com.otpless.network.NetworkStatusData)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.otpless.dto.OtplessResponse: java.lang.String toString()
com.otpless.main.OtplessViewImpl: void loadEventCallbackAndDebugLog(java.lang.Class,java.lang.Object)
com.otpless.web.LoadingStatusData: LoadingStatusData(com.otpless.web.LoadingStatus,java.lang.String,int,java.lang.String)
com.google.android.gms.auth.api.credentials.IdentityProviders: java.lang.String getIdentityProviderForAccount(android.accounts.Account)
com.otpless.network.OtplessCellularNetworkImpl$connectivityManager$2: OtplessCellularNetworkImpl$connectivityManager$2(com.otpless.network.OtplessCellularNetworkImpl)
com.otpless.tesseract.ApiException: ApiException(java.lang.Throwable,int,org.json.JSONObject,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.otpless.web.OtplessWebListener: void checkWebAuthnAuthenticatorAvailability()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.otpless.utils.OtplessPhoneHintManagerImpl: void showPhoneNumberHint$lambda$4$lambda$2(kotlin.jvm.functions.Function1,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.otpless.network.OtplessRepository$pushEvent$data$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
com.otpless.tesseract.SecureAuthDetail: java.lang.String getToken()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.google.android.gms.auth.api.credentials.CredentialRequest: com.google.android.gms.auth.api.credentials.CredentialPickerConfig getCredentialHintPickerConfig()
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
com.otpless.main.OtplessZeroTapReceiver: void access$setOtpReaderImpl$cp(java.lang.ref.WeakReference)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
com.otpless.main.NativeWebListener: boolean isHeadlessRequestPushed()
com.otpless.tesseract.SecureAnalysisFpRequest: SecureAnalysisFpRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String toString()
com.google.android.gms.auth.api.credentials.CredentialRequestResult: com.google.android.gms.auth.api.credentials.Credential getCredential()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.gms.fido.fido2.api.common.Attachment: com.google.android.gms.fido.fido2.api.common.Attachment valueOf(java.lang.String)
com.google.android.gms.auth.api.credentials.Credential$Builder: com.google.android.gms.auth.api.credentials.Credential$Builder setPassword(java.lang.String)
com.otpless.web.NativeWebManager: void sendHeadlessRequest()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.ApiKey getApiKey()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void removeRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
com.otpless.dto.HeadlessRequest: com.otpless.dto.HeadlessChannel getChannel()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.otpless.web.OtplessWebView: OtplessWebView(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.otpless.network.OtplessCellularNetworkImpl: java.lang.String networkInfo$linkName(com.otpless.network.OtplessCellularNetworkImpl,android.net.Network)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.otpless.web.NativeWebManager: kotlin.Unit lambda$whatsappOtpAutoRead$12(com.otpless.utils.OtpResult)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
androidx.window.layout.util.ContextCompatHelperApi30: androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context)
com.otpless.web.OtplessWebView: void changeLoadingStatus(com.otpless.web.LoadingStatus)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: void writeToParcel(android.os.Parcel,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.otpless.utils.OtplessUtility: com.otpless.dto.HeadlessResponse makeEmptyWebResponse(com.otpless.dto.HeadlessRequest)
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.otpless.views.OtplessContainerView: void enableHeadlessConfig()
com.otpless.network.OtplessRepository: com.otpless.tesseract.ApiData access$parseResponse(com.otpless.network.OtplessRepository,retrofit2.Response)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.otpless.tesseract.ApiData$Success: java.lang.String toString()
com.otpless.web.NativeWebManager: void lambda$codeVerificationStatus$0(org.json.JSONObject)
com.otpless.web.OtplessWebView: OtplessWebView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.otpless.main.OtplessViewImpl: void setCallback(com.otpless.dto.OtplessRequest,com.otpless.views.OtplessUserDetailCallback)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: boolean isForNewAccount()
com.otpless.utils.OtplessPhoneHintManagerImpl: androidx.activity.result.ActivityResultLauncher access$getPhoneNumberHintIntentResultLauncher$p(com.otpless.utils.OtplessPhoneHintManagerImpl)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.otpless.web.NativeWebManager: void closeActivity()
com.otpless.main.OtplessViewRemovalNotifier: void onOtplessViewRemoved(com.otpless.main.OtplessViewImpl)
androidx.preference.internal.PreferenceImageView: void setMaxHeight(int)
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.otpless.main.OtplessManager$ActivityLifeManager: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.otpless.web.NativeWebManager: void deviceDetails()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
com.otpless.tesseract.SecureAnalysisShdRequest: int hashCode()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
io.flutter.view.TextureRegistry$ImageTextureEntry: long id()
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.otpless.network.ONetworkType: ONetworkType(java.lang.String,int)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.otpless.otplessflutter.OtplessFlutterPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.otpless.main.OtplessWebAuthnManagerImpl: OtplessWebAuthnManagerImpl(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.google.android.gms.auth.api.credentials.Credential: android.net.Uri zba(com.google.android.gms.auth.api.credentials.Credential)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.HintRequest$Builder setEmailAddressIdentifierSupported(boolean)
com.google.android.gms.auth.api.credentials.CredentialRequest: CredentialRequest(int,boolean,java.lang.String[],com.google.android.gms.auth.api.credentials.CredentialPickerConfig,com.google.android.gms.auth.api.credentials.CredentialPickerConfig,boolean,java.lang.String,java.lang.String,boolean)
com.otpless.network.OtplessConnectivityManager: void requestNetwork$default(com.otpless.network.OtplessConnectivityManager,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.otpless.utils.OtplessPhoneHintManager$DefaultImpls: void register$default(com.otpless.utils.OtplessPhoneHintManager,android.app.Activity,boolean,int,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1: OtplessRepository$requestSnaOnCellularNetwork$1(kotlin.jvm.functions.Function1,java.lang.String)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: java.lang.String zbd()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.otpless.utils.Utility: void openChromeCustomTab(android.app.Activity,android.net.Uri)
com.otpless.web.OtplessWebListener: void openDeeplink(java.lang.String,org.json.JSONObject)
com.otpless.web.NativeWebManager: boolean onActivityResult(int,int,android.content.Intent)
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig build()
com.otpless.tesseract.SecureAnalysisError: com.otpless.tesseract.SecureAnalysisError copy(java.lang.Exception,java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void waitOnFence(android.media.Image)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$1$1$1: OtplessCellularNetworkImpl$requestNetwork$1$1$1(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.otpless.dto.HeadlessChannel: java.lang.String getChannelName()
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
android.support.customtabs.IEngagementSignalsCallback$Stub: android.support.customtabs.IEngagementSignalsCallback asInterface(android.os.IBinder)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.otpless.utils.Utility: void pushEvent(java.lang.String,org.json.JSONObject,java.lang.String,java.lang.String)
com.otpless.main.OtplessViewContract: org.json.JSONObject getExtraParams()
com.otpless.otplessflutter.OtplessFlutterPlugin$Companion: OtplessFlutterPlugin$Companion()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: androidx.window.extensions.area.ExtensionWindowAreaPresentation getRearDisplayPresentation()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
com.otpless.main.OtplessWebAuthnManager: void signIn(org.json.JSONObject,com.otpless.network.ApiCallback)
com.otpless.utils.Utility: boolean isAppInstalled(android.content.pm.PackageManager,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.otpless.views.OtplessContainerView: OtplessContainerView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.otpless.network.OtplessCellularNetworkImpl$cellularInfo$2: java.lang.Object invoke()
com.google.android.gms.auth.api.credentials.HintRequest: com.google.android.gms.auth.api.credentials.CredentialPickerConfig getHintPickerConfig()
com.otpless.web.OtplessWebView: boolean shouldDisableAutofill()
com.otpless.authfusion.AuthFusionSdk: void logout()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.otpless.web.NativeWebManager: org.json.JSONObject access$100(com.otpless.web.NativeWebManager,java.lang.Exception,java.lang.String)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
com.otpless.network.OtplessRepository: java.lang.Object access$makeConnection(com.otpless.network.OtplessRepository,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.otpless.main.OtplessWebAuthnManagerImpl: void lambda$signIn$3(com.otpless.network.ApiCallback,java.lang.Exception)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
com.otpless.dto.HeadlessRequest: HeadlessRequest()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
androidx.appcompat.widget.ViewUtils$Api29Impl: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void lambda$dequeueImage$0()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.otpless.network.OtplessRepository$makeConnection$$inlined$CoroutineExceptionHandler$1: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.otpless.tesseract.R: R()
com.google.android.gms.internal.auth.zze: com.google.android.gms.internal.auth.zzf zzb(android.os.IBinder)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
io.flutter.embedding.android.FlutterView: void setDelegate(io.flutter.embedding.android.FlutterViewDelegate)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void release()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.otpless.network.OtplessRepository$warmupSna$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1$1: OtplessRepository$warmupSna$1$1$responses$1$1$1(java.lang.String,kotlin.Lazy,kotlin.coroutines.Continuation)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.otpless.main.WhatsappOtpReaderImpl$incomingIntentHandler$2: java.lang.Object invoke()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.otpless.web.OtplessWebListener: void subscribeBackPress(boolean)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.otpless.utils.Utility: void pushEvent(java.lang.String,org.json.JSONObject)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1: OtplessRepository$warmupSna$1$1$responses$1$1(java.lang.String,kotlin.Lazy,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
com.otpless.web.OtplessWebListener: void closeActivity()
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.otpless.network.OtplessCellularNetwork: boolean isCellularDataEnabled()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.otpless.main.OtplessEventData: org.json.JSONObject getData()
com.otpless.network.OtplessNetworkManager: com.otpless.network.NetworkStatusData getNetworkStatus()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.google.android.gms.auth.api.credentials.CredentialRequest: java.lang.String getIdTokenNonce()
com.otpless.tesseract.sim.OtplessSimStateReceiverKt: java.util.List access$saveSimEjectionStateEntry(android.content.Context,com.otpless.tesseract.SimStateEntry)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.otpless.tesseract.ApiData: ApiData(kotlin.jvm.internal.DefaultConstructorMarker)
com.otpless.main.OtplessViewImpl: void sendIntentInEvent(boolean)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.otpless.main.OtplessManager: com.otpless.main.OtplessView getOtplessView(android.app.Activity)
androidx.preference.internal.PreferenceImageView: int getMaxHeight()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1: java.lang.Object invoke(java.lang.Object)
com.otpless.main.OtplessView: void setBackBackButtonSubscription(boolean)
com.otpless.network.OtplessConnectivityManager: void networkInfo(android.net.Network)
com.otpless.tesseract.SecureAnalysisError: java.lang.String toString()
com.otpless.network.OtplessCellularNetworkImpl: void access$networkInfo(com.otpless.network.OtplessCellularNetworkImpl,android.net.Network)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
com.otpless.utils.OtplessPhoneHintManagerImpl$Companion: OtplessPhoneHintManagerImpl$Companion()
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void setCurrentPlayTime(android.animation.AnimatorSet,long)
com.otpless.views.OtplessContainerView: void lambda$initView$0(android.view.View)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.google.android.gms.auth.account.zzd: com.google.android.gms.auth.account.zze zzb(android.os.IBinder)
com.otpless.tesseract.SimStateEntry: com.otpless.tesseract.SimStateEntry copy$default(com.otpless.tesseract.SimStateEntry,java.lang.String,long,int,java.lang.Object)
io.flutter.view.TextureRegistry$SurfaceProducer: android.view.Surface getSurface()
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
com.otpless.views.OtplessContainerView: void closeView()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.ListenerHolder registerListener(java.lang.Object,java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.google.android.gms.auth.api.credentials.zbe: zbe()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.otpless.BuildConfig: BuildConfig()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.otpless.dto.OtplessRequest: OtplessRequest(java.lang.String)
com.otpless.web.NativeWebManager$1: NativeWebManager$1(com.otpless.web.NativeWebManager)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.otpless.R$style: R$style()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.otpless.tesseract.SecureAnalysisSuccess: int hashCode()
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.otpless.network.OtplessCellularNetworkImpl: void cancelTimeout()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.otpless.network.OtplessRepository$pushEvent$1: java.lang.Object invokeSuspend(java.lang.Object)
com.otpless.otplessflutter.OtplessFlutterPlugin: boolean onBackPressed()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.otpless.dto.HeadlessRequest: org.json.JSONObject makeJson()
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
com.otpless.web.NativeWebManager: void sendHeadlessResponse(org.json.JSONObject,boolean)
com.otpless.web.LoadingStatus: com.otpless.web.LoadingStatus[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.otpless.network.OtplessRepository$pushEventAsync$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void addRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
com.otpless.web.NativeWebManager: void setNativeWebListener(com.otpless.main.NativeWebListener)
com.otpless.tesseract.SimStateEntry: java.lang.String getState()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.otpless.authfusion.AuthFusionManager: void log(kotlin.jvm.functions.Function0)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.otpless.main.OtplessViewImpl: boolean onActivityResult(int,int,android.content.Intent)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.otpless.web.OtplessWebView: java.lang.String access$400(com.otpless.web.OtplessWebView)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.otpless.web.NativeWebManager: void subscribeBackPress(boolean)
com.google.android.material.button.MaterialButton: void setElevation(float)
com.google.android.gms.auth.api.credentials.CredentialsClient: com.google.android.gms.tasks.Task save(com.google.android.gms.auth.api.credentials.Credential)
com.otpless.web.OtplessWebView: void callWebJs(java.lang.String,java.lang.Object[])
com.otpless.web.OtplessWebViewWrapper: OtplessWebViewWrapper(android.content.Context)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
com.otpless.tesseract.sim.SimDetailProvider: java.lang.String getNetworkType()
com.otpless.dto.HeadlessRequest: void setPhoneNumber(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.otpless.web.OtplessWebView$OtplessWebClient: OtplessWebView$OtplessWebClient(com.otpless.web.OtplessWebView,com.otpless.web.OtplessWebView$1)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.otpless.tesseract.SecureAnalysisFpRequest: int hashCode()
com.otpless.utils.OtpResult: java.lang.String getErrorMessage()
com.otpless.web.OtplessWebListener: void startSdkLogin(org.json.JSONObject)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.otpless.utils.OnceUseProp: OnceUseProp()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.google.android.gms.auth.api.credentials.Credential: void writeToParcel(android.os.Parcel,int)
com.otpless.network.OtplessCellularNetworkImpl: void afterCellularApiCompleted()
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.otpless.otplessflutter.OtplessFlutterPlugin: void softParseInt(java.lang.String,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader access$700(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.otpless.tesseract.sim.OtplessSimStateReceiver: void onReceive(android.content.Context,android.content.Intent)
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.otpless.tesseract.SecureAnalysisSuccess: org.json.JSONObject getData()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.otpless.tesseract.sim.OtplessSimStateReceiverKt$getSavedSimEjectionEntries$$inlined$sortByDescending$1: int compare(java.lang.Object,java.lang.Object)
com.otpless.tesseract.ApiData$Error: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.otpless.tesseract.SecureAnalysisError: java.lang.String component2()
com.otpless.main.WhatsappOtpReader: boolean isWhatsAppHandshakeSupported(android.content.Context)
com.otpless.tesseract.sim.OtplessSimStateReceiverKt: java.util.List saveSimEjectionStateEntry(android.content.Context,com.otpless.tesseract.SimStateEntry)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.otpless.dto.OtpLength: com.otpless.dto.OtpLength suggestOtpSize(int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType valueOf(java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.otpless.network.NetworkStatusData: com.otpless.network.NetworkStatusData enabled(com.otpless.network.ONetworkType,java.lang.String)
com.otpless.web.OtplessWebListener: void saveString(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: SharedPreferencesPlugin()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String component4()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.otpless.dto.HeadlessResponse: java.lang.String getResponseType()
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
com.otpless.authfusion.AuthFusionManager: void setOnEventReceivedCallback(kotlin.jvm.functions.Function2)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.otpless.utils.Utility: java.util.HashMap makeEventMap(java.lang.String,org.json.JSONObject)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
com.otpless.tesseract.SecureAnalysisError: java.lang.Exception component1()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void endRearDisplayPresentationSession()
com.otpless.views.OtplessLoaderEvent: OtplessLoaderEvent(java.lang.String,int)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.otpless.otplessflutter.OtplessFlutterPlugin: void showPhoneHint(boolean,kotlin.jvm.functions.Function1)
com.otpless.tesseract.SecureAuthDetail: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbd(com.google.android.gms.auth.api.credentials.Credential)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.google.android.gms.auth.api.credentials.Credential$Builder: com.google.android.gms.auth.api.credentials.Credential build()
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
com.otpless.tesseract.SecureAnalysisFpRequest: com.otpless.tesseract.SecureAnalysisFpRequest copy$default(com.otpless.tesseract.SecureAnalysisFpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbf(com.google.android.gms.auth.api.credentials.Credential)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
com.otpless.views.OtplessLoaderCallback: void onOtplessLoaderEvent(com.otpless.views.OtplessLoaderEvent)
com.google.android.gms.auth.api.credentials.Credential: java.lang.String getGivenName()
com.otpless.dto.OtplessResponse: void setData(org.json.JSONObject)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
com.google.android.material.textfield.TextInputLayout: void setHint(int)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.otpless.network.OtplessConnectivityManager: void linkAddresses(android.net.Network)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
com.otpless.network.OtplessCellularNetworkImpl$Companion: OtplessCellularNetworkImpl$Companion()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.otpless.network.OtplessCellularNetworkImplV2$openWithDataCellular$1: OtplessCellularNetworkImplV2$openWithDataCellular$1(com.otpless.network.OtplessCellularNetworkImplV2,com.otpless.network.OtplessCellularDataListener)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.otpless.main.HeadlessResponseCallback: void onHeadlessResponse(com.otpless.dto.HeadlessResponse)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest$Builder setPasswordLoginSupported(boolean)
com.google.android.gms.auth.api.credentials.Credential: java.util.List zbh(com.google.android.gms.auth.api.credentials.Credential)
com.example.docon.MainActivity: MainActivity()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.Image acquireLatestImage()
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
com.google.android.gms.auth.api.credentials.Credentials: com.google.android.gms.auth.api.credentials.CredentialsClient getClient(android.content.Context,com.google.android.gms.auth.api.credentials.CredentialsOptions)
com.otpless.tesseract.ApiException: ApiException(java.lang.String,int,org.json.JSONObject,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void cleanup()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
com.otpless.network.OtplessCellularNetworkImpl: void unregisterCellularNetworkListener()
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.internal.ClientSettings$Builder createClientSettingsBuilder()
com.otpless.utils.Utility: boolean isValid(java.lang.String[])
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.google.android.gms.fido.fido2.api.common.RSAAlgorithm: com.google.android.gms.fido.fido2.api.common.RSAAlgorithm[] values()
com.otpless.network.OtplessRepository: kotlinx.coroutines.Job pushEventAsync(java.util.Map,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.otpless.network.OtplessNetworkManager: void lambda$makeNetworkCallback$0()
com.otpless.tesseract.ApiData$Error: ApiData$Error(com.otpless.tesseract.ApiException)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.otpless.network.OtplessCellularNetworkImplV2: android.telephony.TelephonyManager getTelephonyService()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
com.otpless.main.OtplessWebAuthnManagerImpl: void lambda$signIn$2(com.otpless.network.ApiCallback,android.app.PendingIntent)
com.otpless.main.OtplessEventData: OtplessEventData(int,org.json.JSONObject)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
com.otpless.main.OtplessZeroTapReceiver$Companion: java.lang.ref.WeakReference getOtpReaderImpl$otpless_android_sdk_release()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void waitOnFence(android.media.Image)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1: com.otpless.network.SnaService invoke$lambda$0(kotlin.Lazy)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.gms.dynamic.ObjectWrapper: com.google.android.gms.dynamic.IObjectWrapper wrap(java.lang.Object)
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.otpless.network.OtplessCellularNetworkImplV2$openWithDataCellular$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: boolean shouldShowCancelButton()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
kotlin.collections.AbstractList: AbstractList()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.otpless.main.OtplessViewImpl: boolean onBackPressed()
com.otpless.network.ONetworkStatus: ONetworkStatus(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.otpless.main.OtplessZeroTapReceiver: OtplessZeroTapReceiver()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onUnavailable$1: java.lang.Object invoke()
com.otpless.main.OtplessView: void startHeadless(com.otpless.dto.HeadlessRequest,com.otpless.main.HeadlessResponseCallback)
com.google.android.material.chip.Chip: void setChipIconSize(float)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getWidth()
com.otpless.dto.OtplessRequest: com.otpless.dto.OtplessRequest setUxmode(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$1: OtplessRepository$requestSnaOnCellularNetwork$1$1$1(kotlin.jvm.functions.Function1,com.otpless.tesseract.ApiData,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
com.otpless.config.Configuration: Configuration()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.otpless.dto.HeadlessResponse: int getStatusCode()
com.otpless.main.OtplessZeroTapReceiver: java.lang.ref.WeakReference access$getOtpReaderImpl$cp()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
com.otpless.network.OtplessRepository$pushEventAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabledInNative(boolean)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.otpless.web.OtplessWebListener: void handleEmptyWebResponse(java.lang.String)
com.otpless.network.OtplessNetworkManager: void changeNetworkStatus(com.otpless.network.NetworkStatusData)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.otpless.otplessflutter.OtplessFlutterPlugin: void onDetachedFromActivity()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.material.button.MaterialButton: int getInsetBottom()
com.otpless.main.OtplessViewImpl: java.lang.String getAppId()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
com.otpless.network.OtplessRepository$pushEvent$1: OtplessRepository$pushEvent$1(com.otpless.network.OtplessRepository,kotlin.coroutines.Continuation)
com.otpless.main.OtplessViewImpl: com.otpless.tesseract.OtplessSecureService getOtplessSecureService()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.otpless.otplessflutter.OtplessFlutterPlugin: java.util.List getEjectedSimsEntries()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: int getTextHeight()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
com.otpless.network.OtplessRepository$pushEventAsync$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: java.lang.String zbc(com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void maybeWaitOnFence(android.media.Image)
com.otpless.network.OtplessNetworkManager: void addListeners(android.content.Context,com.otpless.network.OnConnectionChangeListener)
com.otpless.web.OtplessWebView$OtplessWebClient: OtplessWebView$OtplessWebClient(com.otpless.web.OtplessWebView)
com.otpless.web.NativeWebManager: void handShakeFromWeb()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
com.google.android.gms.auth.api.credentials.Credentials: com.google.android.gms.auth.api.credentials.CredentialsClient getClient(android.content.Context)
com.otpless.views.OtplessContainerView: com.otpless.web.NativeWebManager getWebManager()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getActiveReader()
androidx.preference.PreferenceCategory: PreferenceCategory(android.content.Context,android.util.AttributeSet)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.otpless.utils.OtplessPhoneHintManagerImpl: void showPhoneNumberHint$lambda$4(com.otpless.utils.OtplessPhoneHintManagerImpl,kotlin.jvm.functions.Function1,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.otpless.views.OtplessContainerView: void lambda$initView$1(android.view.View)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.otpless.tesseract.sim.SimDetailProvider: org.json.JSONObject getDefaultSimCardDetails()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.otpless.main.OtplessView: void initHeadless(java.lang.String,java.lang.String,long)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
com.otpless.views.OtplessContainerView: void lambda$setUiConfiguration$3(int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.google.android.gms.auth.api.credentials.CredentialsApi: com.google.android.gms.common.api.PendingResult request(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.CredentialRequest)
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.HintRequest$Builder setServerClientId(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.otpless.network.OtplessRepository$requestSna$2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.google.android.gms.common.api.GoogleApi: android.content.Context getApplicationContext()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.otpless.tesseract.ApiData$Success: boolean equals(java.lang.Object)
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.otpless.dto.OtplessResponse: OtplessResponse()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.otpless.web.NativeWebManager: void codeVerificationStatus(org.json.JSONObject)
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest$Builder setCredentialPickerConfig(com.google.android.gms.auth.api.credentials.CredentialPickerConfig)
com.otpless.network.OtplessRepository$pushEventAsync$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
com.otpless.utils.OtplessPhoneHintManagerImpl: void showPhoneNumberHint$lambda$4$lambda$3(boolean,com.otpless.utils.OtplessPhoneHintManagerImpl,kotlin.jvm.functions.Function1,java.lang.Exception)
com.google.android.gms.auth.api.credentials.zbb: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRegisterEventListener(com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod)
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
android.support.v4.os.IResultReceiver2$Stub: android.support.v4.os.IResultReceiver2 asInterface(android.os.IBinder)
com.otpless.main.OtplessWebAuthnManagerImpl: void lambda$register$1(com.otpless.network.ApiCallback,java.lang.Exception)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.otpless.utils.OtpResultListener: void onOtpReadResult(com.otpless.utils.OtpResult)
com.google.android.material.chip.Chip: float getChipEndPadding()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.otpless.web.NativeWebManager$1: void onError(java.lang.Exception)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.otpless.network.OtplessRepository$warmupSna$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub: android.support.customtabs.trusted.ITrustedWebActivityCallback asInterface(android.os.IBinder)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean shouldUpdate()
com.otpless.main.OtplessWebAuthnManager: void isPlatformAuthenticatorAvailable(com.otpless.main.ResultCallback)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.chip.Chip: void setGravity(int)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2: void onLost(android.net.Network)
com.google.android.gms.auth.api.credentials.zbc: java.lang.Object[] newArray(int)
com.otpless.main.OtplessViewImpl: java.lang.String getFirstLoadingUrl()
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType valueOf(java.lang.String)
com.otpless.R$color: R$color()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.otpless.network.OtplessCellularNetworkImplV2$openWithDataCellular$1: void invoke(com.otpless.tesseract.ApiData)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1: OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1(java.lang.String,kotlin.Lazy,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onUnavailable$1: OtplessCellularNetworkImpl$forceCellular$2$onUnavailable$1(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.otpless.web.NativeWebManager: void callHeadlessRequestToWeb(org.json.JSONObject)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.otpless.tesseract.ApiData$Success: ApiData$Success(java.lang.Object)
com.otpless.network.OtplessCellularNetworkImpl$connectivityManager$2: android.net.ConnectivityManager invoke()
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
com.otpless.tesseract.SecureAnalysisError: com.otpless.tesseract.SecureAnalysisError copy$default(com.otpless.tesseract.SecureAnalysisError,java.lang.Exception,java.lang.String,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
com.google.android.gms.auth.api.credentials.CredentialsClient: CredentialsClient(android.app.Activity,com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$1: OtplessCellularNetworkImpl$forceCellular$1(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType[] values()
com.otpless.network.OnConnectionChangeListener: void onConnectionChange(com.otpless.network.NetworkStatusData)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.otpless.dto.HeadlessRequest: void setChannelType(java.lang.String)
com.google.android.gms.auth.api.credentials.CredentialsClient: com.google.android.gms.tasks.Task delete(com.google.android.gms.auth.api.credentials.Credential)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: boolean zbe(com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)
androidx.browser.customtabs.CustomTabsIntent$Api34Impl: void setShareIdentityEnabled(android.app.ActivityOptions,boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.otpless.network.OtplessRepository: void requestSnaOnCellularNetwork(com.otpless.network.OtplessConnectivityManager,java.lang.String,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.otpless.tesseract.OtplessSecureService$DefaultImpls: java.lang.Object startSecureAnalysis$default(com.otpless.tesseract.OtplessSecureService,java.util.Map,kotlin.coroutines.Continuation,int,java.lang.Object)
com.otpless.utils.OtpResult: boolean isSuccess()
com.otpless.tesseract.SimStateEntry: long getTransactionTime()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.otpless.web.NativeWebManager: kotlin.Unit lambda$startSdkLogin$15(org.json.JSONObject)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.otpless.web.NativeWebManager: void appInfo()
com.google.android.gms.auth.api.credentials.CredentialsApi: com.google.android.gms.common.api.PendingResult save(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.Credential)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.otpless.network.OtplessCellularNetworkImpl: void access$setCellularNetworkCallBack$p(com.otpless.network.OtplessCellularNetworkImpl,android.net.ConnectivityManager$NetworkCallback)
com.otpless.authfusion.AuthFusionManager: void pushEvent(java.lang.String,org.json.JSONObject)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.otpless.utils.Utility: java.lang.String getInstallerName(android.content.Context)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onAvailable$1: java.lang.Object invoke()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.google.android.gms.auth.api.credentials.CredentialRequestResult: com.google.android.gms.common.api.Status getStatus()
kotlin.jvm.internal.FunctionReference: int getArity()
com.otpless.web.NativeWebManager: void changeWebViewHeight(java.lang.Integer)
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest$Builder setCredentialHintPickerConfig(com.google.android.gms.auth.api.credentials.CredentialPickerConfig)
com.otpless.web.LoadingStatusData: LoadingStatusData(com.otpless.web.LoadingStatus)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.otpless.network.OtplessNetworkManager$2: void onReceive(android.content.Context,android.content.Intent)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.otpless.dto.HeadlessRequest: void setCode(java.lang.String)
com.otpless.network.OtplessRepository$pushEventService$2: OtplessRepository$pushEventService$2()
com.otpless.web.OtplessWebViewWrapper: OtplessWebViewWrapper(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.gms.auth.api.credentials.CredentialRequest: java.util.Set getAccountTypesSet()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.otpless.network.OtplessRepository: void warmupSna(com.otpless.network.OtplessConnectivityManager,java.lang.String[],android.content.SharedPreferences)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
androidx.browser.customtabs.CustomTabsIntent$Api23Impl: android.app.ActivityOptions makeBasicActivityOptions()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.otpless.main.OtplessViewImpl$1: void onTick(long)
com.otpless.network.OtplessConnectivityManager: void onLost(android.net.Network)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.otpless.dto.Triple: java.lang.Object getThird()
com.otpless.tesseract.SecureAnalysisError: SecureAnalysisError(java.lang.Exception,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.otpless.web.LoadingStatusData: int getErrorCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.gms.auth.api.credentials.zbe: java.lang.Object createFromParcel(android.os.Parcel)
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1$1: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.otpless.web.NativeWebManager: kotlin.Unit lambda$whatsappOtpAutoRead$11(com.otpless.utils.OtpResult)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.otpless.web.OtplessWebView: void access$100(com.otpless.web.OtplessWebView,com.otpless.web.LoadingStatus)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase[] values()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.otpless.utils.OtpReaderManager: void onOtpReadResult(com.otpless.utils.OtpResult)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
com.otpless.utils.Utility: void debugLog(java.lang.Throwable)
com.otpless.main.OtplessViewImpl: void setBackBackButtonSubscription(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.HintRequest$Builder setPhoneNumberIdentifierSupported(boolean)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.otpless.dto.OtpDeliveryChannel: com.otpless.dto.OtpDeliveryChannel[] values()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.otpless.main.OtplessViewImpl: void loadWebView(java.lang.String,android.net.Uri)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType[] values()
com.otpless.utils.OtplessPhoneHintManager: boolean onActivityResult(int,int,android.content.Intent)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.otpless.web.OtplessWebView: void changeLoadingStatus(com.otpless.web.LoadingStatus,java.lang.String,int,java.lang.String)
com.otpless.otplessflutter.UtilityKt: org.json.JSONObject convertHeadlessResponseToJson(com.otpless.dto.HeadlessResponse)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.otpless.main.OtplessViewImpl: void onPostActivityCreated(android.os.Bundle)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
com.otpless.utils.OtpReaderManager: void registerReceiver(android.content.Context)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.otpless.dto.OtplessRequest: com.otpless.dto.OtplessRequest addExtras(java.lang.String,java.lang.String)
com.google.android.gms.auth.api.credentials.CredentialRequest: com.google.android.gms.auth.api.credentials.CredentialPickerConfig getCredentialPickerConfig()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder: com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder zba(java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.otpless.main.OtplessWebAuthnManagerImpl: void lambda$register$0(com.otpless.network.ApiCallback,android.app.PendingIntent)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.otpless.utils.Utility: void debugLog(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.otpless.utils.Utility: Utility()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder: CredentialsOptions$Builder()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.otpless.views.OtplessLoaderEvent: com.otpless.views.OtplessLoaderEvent valueOf(java.lang.String)
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1$1: void invoke(com.otpless.tesseract.ApiData)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.otpless.main.OtplessViewImpl: void closeCountDownTimer()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.otpless.network.OtplessRepository$warmupSna$1$snaService$2: OtplessRepository$warmupSna$1$snaService$2(android.net.Network)
com.otpless.main.OtplessViewContract: com.otpless.main.OtplessWebAuthnManager getWebAuthnManager()
com.otpless.web.NativeWebManager: kotlin.Unit lambda$pushEvent$4(com.otpless.tesseract.ApiData)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
com.otpless.otplessflutter.OtplessFlutterPlugin: void setSimEjectionListener(boolean)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.otpless.main.OtplessView: void setRetryVisibility(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
androidx.preference.DropDownPreference: DropDownPreference(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
com.otpless.tesseract.sim.OtplessSimStateReceiverApi: java.util.List getSimStateChangeListeners$tesseract_release()
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$job$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.otpless.network.OtplessNetworkManager: OtplessNetworkManager()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.otpless.main.OtplessViewImpl: void initUrlLoading()
com.otpless.web.WebJsInterface: org.json.JSONArray getJsonList(org.json.JSONObject,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
kotlin.jvm.internal.FunctionReference: int hashCode()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.gms.auth.api.credentials.CredentialsClient: com.google.android.gms.tasks.Task disableAutoSignIn()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
com.otpless.web.OtplessWebListener: void pushEvent(org.json.JSONObject)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.otpless.web.NativeWebManager: void lambda$changeWebViewHeight$1(int)
com.otpless.otplessflutter.OtplessFlutterPlugin: void openOtplessLoginPage$lambda$5$lambda$4(com.otpless.otplessflutter.OtplessFlutterPlugin,com.otpless.dto.OtplessResponse)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.otpless.main.HeadlessInitState: com.otpless.main.HeadlessInitState[] $values()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.otpless.utils.Utility: void pushEvent(java.lang.String)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.otpless.tesseract.sim.OtplessSimStateReceiverApi: OtplessSimStateReceiverApi()
com.otpless.otplessflutter.OtplessFlutterPlugin: void onHeadlessResultCallback(com.otpless.dto.HeadlessResponse)
com.otpless.main.OtplessZeroTapReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.otpless.utils.OtplessPhoneHintManagerImpl: androidx.activity.result.ActivityResultLauncher getPhoneNumberHintLauncher(com.otpless.main.PhoneHintLauncherType)
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.otpless.main.OtplessManager$ActivityLifeManager: OtplessManager$ActivityLifeManager(com.otpless.main.OtplessManager)
com.otpless.utils.OtpReaderReceiver: OtpReaderReceiver(com.otpless.utils.OtpResultListener)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback access$200(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.otpless.main.OtplessView: boolean onNewIntent(android.content.Intent)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
com.otpless.main.WhatsappOtpReaderImpl: void onOtpError$otpless_android_sdk_release(com.whatsapp.otp.android.sdk.enums.WhatsAppOtpError,java.lang.Exception)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.otpless.main.OtplessViewImpl: com.otpless.network.OtplessCellularNetwork getOtplessCellularNetwork()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.otpless.network.OtplessCellularNetworkImplV2: void openWithDataCellular(android.net.Uri,com.otpless.network.OtplessCellularDataListener)
com.otpless.network.OtplessRepository: com.otpless.network.SnaService access$getSnaService(com.otpless.network.OtplessRepository)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
com.otpless.tesseract.OtplessSecureService: org.json.JSONObject getRunningHardwareComponentData()
com.otpless.tesseract.SecureAnalysisRequest: SecureAnalysisRequest(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void addRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder[] values()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
android.support.v4.os.IResultReceiver$Stub: android.support.v4.os.IResultReceiver asInterface(android.os.IBinder)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.otpless.web.NativeWebManager: void onPhoneNumberSelectionResult(com.otpless.dto.Tuple)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.whatsapp.otp.android.sdk.enums.WhatsAppOtpError: com.whatsapp.otp.android.sdk.enums.WhatsAppOtpError valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onAvailable$1: void invoke()
com.otpless.web.NativeWebManager: void logoutSdk(org.json.JSONObject)
androidx.lifecycle.ReportFragment: ReportFragment()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.otpless.views.OtplessContainerView: org.json.JSONObject getExtraParams()
com.google.android.gms.fido.common.Transport: com.google.android.gms.fido.common.Transport valueOf(java.lang.String)
com.otpless.main.WhatsappOtpReaderImpl: WhatsappOtpReaderImpl(android.app.Activity)
com.otpless.main.OtplessManager$ActivityLifeManager: void onActivityStarted(android.app.Activity)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.otpless.utils.Utility: java.lang.String getAppSignature(android.content.Context)
com.otpless.web.NativeWebManager: void lambda$sendHeadlessResponse$8(com.otpless.dto.HeadlessResponse,boolean)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
com.otpless.main.OtplessViewImpl: void commitHeadlessResponse(com.otpless.dto.HeadlessResponse)
com.otpless.dto.HeadlessRequest: void setChannelType(com.otpless.dto.HeadlessChannelType)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder: com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder forceEnableSaveDialog()
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
com.otpless.web.NativeWebManager: void lambda$phoneNumberSelection$6(boolean)
com.otpless.utils.OtplessPhoneHintManagerImpl: androidx.activity.result.ActivityResultLauncher access$getPhoneNumberHintLauncher(com.otpless.utils.OtplessPhoneHintManagerImpl,com.otpless.main.PhoneHintLauncherType)
com.otpless.main.OtplessManager: void lambda$new$0(com.otpless.main.OtplessViewImpl)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.plugins.sharedpreferences.LegacySharedPreferencesPlugin: LegacySharedPreferencesPlugin()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.otpless.main.OtplessViewImpl: void restoreSavedInstance(android.os.Bundle)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void reverse(android.animation.AnimatorSet)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.otpless.network.OtplessCellularNetworkImplV2: boolean isCellularDataEnabled()
com.google.android.gms.auth.api.credentials.HintRequest: void writeToParcel(android.os.Parcel,int)
com.otpless.authfusion.R: R()
com.otpless.tesseract.sim.SimDetailProvider: android.content.Context getContext()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.otpless.web.OtplessWebView$OtplessWebClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: int getIconSize()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.auth.api.credentials.Credentials: Credentials()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.otpless.web.OtplessWebView$OtplessWebClient: void onPageFinished(android.webkit.WebView,java.lang.String)
androidx.preference.internal.PreferenceImageView: void setMaxWidth(int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.otpless.tesseract.OtplessSecureService: java.util.List getSimEjectionStates()
com.otpless.utils.OtplessUtility: void convertToEventParamsJson(com.otpless.dto.HeadlessResponse,kotlin.jvm.functions.Function3)
com.google.android.gms.fido.fido2.api.common.RSAAlgorithm: com.google.android.gms.fido.fido2.api.common.RSAAlgorithm valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.otpless.network.OtplessCellularNetworkImpl$Companion: OtplessCellularNetworkImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String component3()
com.otpless.web.OtplessWebViewWrapper: void initView(android.content.Context,android.util.AttributeSet,int)
com.otpless.network.OtplessRepository$requestSnaAsync$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.fido.common.Transport: com.google.android.gms.fido.common.Transport[] values()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.otpless.views.OtplessLoaderEvent: com.otpless.views.OtplessLoaderEvent[] values()
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] values()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
com.google.android.gms.common.api.internal.zzb: zzb()
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.HintRequest$Builder setHintPickerConfig(com.google.android.gms.auth.api.credentials.CredentialPickerConfig)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.otpless.web.NativeWebManager$2: NativeWebManager$2(com.otpless.web.NativeWebManager)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.otpless.dto.Tuple: java.lang.Object getSecond()
com.otpless.network.NetworkStatusData: com.otpless.network.ONetworkStatus getStatus()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.otpless.tesseract.SecureAnalysisShdRequest: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.otpless.main.OtplessRandomIdGenerator: java.lang.String getAppId()
com.otpless.network.SnaService: java.lang.Object requestSna(java.lang.String,kotlin.coroutines.Continuation)
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$$inlined$CoroutineExceptionHandler$1: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$job$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.otpless.network.OtplessRepository$requestSna$2: java.lang.Object invoke(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void maybeWaitOnFence(android.media.Image)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.whatsapp.otp.android.sdk.enums.WhatsAppClientType: com.whatsapp.otp.android.sdk.enums.WhatsAppClientType[] values()
io.flutter.view.TextureRegistry$SurfaceProducer: boolean handlesCropAndRotation()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.otpless.main.WhatsappOtpReader: void processOneTapIntent(android.content.Intent)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.otpless.main.OtplessViewContract$-CC: void $default$onVerificationResult(com.otpless.main.OtplessViewContract,int,org.json.JSONObject)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.otpless.network.OtplessNetworkManager$1: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)
com.otpless.tesseract.SimStateEntry: long component2()
com.otpless.utils.OtplessPhoneHintManagerImpl$showPhoneNumberHint$1$1: void invoke(android.app.PendingIntent)
com.otpless.utils.OtplessPhoneHintManagerImpl: void showFallbackPhoneHint()
com.google.android.gms.auth.api.credentials.Credential: android.net.Uri getProfilePictureUri()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
com.otpless.tesseract.SecureAnalysisSuccess: com.otpless.tesseract.SecureAnalysisSuccess copy$default(com.otpless.tesseract.SecureAnalysisSuccess,org.json.JSONObject,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.google.android.gms.auth.api.credentials.CredentialRequest: java.lang.String[] getAccountTypes()
com.otpless.dto.OtplessResponse: void setErrorMessage(java.lang.String)
com.otpless.network.OtplessCellularNetworkImpl: android.content.Context access$getContext$p(com.otpless.network.OtplessCellularNetworkImpl)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.otpless.network.OtplessRepository$pushEventAsync$2: OtplessRepository$pushEventAsync$2(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.internal.AccountAccessor: android.accounts.Account getAccountBinderSafe(com.google.android.gms.common.internal.IAccountAccessor)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.otpless.views.OtplessContainerView: void onOtplessLoaderEvent(com.otpless.views.OtplessLoaderEvent)
com.google.android.gms.fido.fido2.api.common.Attachment: com.google.android.gms.fido.fido2.api.common.Attachment[] values()
com.otpless.network.OtplessRepository$makeConnection$job$1: OtplessRepository$makeConnection$job$1(kotlin.jvm.functions.Function1,kotlin.jvm.internal.Ref$ObjectRef,kotlin.coroutines.Continuation)
com.google.android.gms.common.internal.zzaf: com.google.android.gms.common.internal.zzag zzb(android.os.IBinder)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.preference.EditTextPreference: EditTextPreference(android.content.Context,android.util.AttributeSet)
androidx.transition.ViewUtilsApi19$Api29Impl: float getTransitionAlpha(android.view.View)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.auth.api.credentials.zba: zba()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
com.otpless.main.OtplessViewImpl: boolean onNewIntent(android.content.Intent)
com.otpless.main.OtplessManager: OtplessManager()
androidx.core.widget.NestedScrollView: int getScrollRange()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest build()
com.otpless.main.OtplessViewImpl: com.otpless.authfusion.GoogleCredentialSdk getGoogleSignInSdk()
com.otpless.main.OtplessViewImpl: void initHeadless(java.lang.String,java.lang.String)
com.otpless.web.OtplessWebListener: void handShakeFromWeb()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.otpless.main.OtplessViewImpl: void setHeadlessCallback(com.otpless.main.HeadlessResponseCallback)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.transition.ViewGroupUtils$Api29Impl: int getChildDrawingOrder(android.view.ViewGroup,int)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.auth.api.credentials.CredentialRequest: java.lang.String getServerClientId()
com.otpless.dto.OtplessRequest: com.otpless.dto.OtplessRequest setLocale(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void disableFenceForTest()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.otpless.network.OtplessRepository$requestSnaAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.otpless.tesseract.SecureAnalysisError: java.lang.String getRequestCode()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.otpless.web.NativeWebManager: void phoneNumberSelection(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.otpless.web.OtplessWebView: void loadWebUrl(java.lang.String)
com.otpless.network.OtplessRepository$pushEventService$2: java.lang.Object invoke()
com.otpless.network.OtplessRepository$pushEvent$data$1: java.lang.Object invoke(kotlin.coroutines.Continuation)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.otpless.network.OtplessRepository$pushEventAsync$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.otpless.tesseract.SecureAnalysisFpRequest: SecureAnalysisFpRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
com.otpless.dto.HeadlessChannel: com.otpless.dto.HeadlessChannel[] values()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
com.google.android.material.button.MaterialButton: void setInsetTop(int)
io.flutter.view.TextureRegistry$SurfaceProducer: long id()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.otpless.tesseract.SecureAnalysisShdRequest: java.lang.String component1()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.otpless.web.WebJsInterface: java.lang.Integer getInt(org.json.JSONObject,java.lang.String)
com.otpless.network.OtplessRepository$pushEventService$2: com.otpless.network.EventService invoke()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
com.otpless.web.WebJsInterface: java.lang.String getString(org.json.JSONObject,java.lang.String)
com.otpless.main.OtplessView: void setEventCallback(com.otpless.main.OtplessEventCallback)
androidx.window.extensions.core.util.function.Predicate: boolean test(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.otpless.main.OtplessWebAuthnManager: void register(org.json.JSONObject,com.otpless.network.ApiCallback)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.otpless.tesseract.sim.OtplessSimStateReceiverApi: void setWeakSimStateChangeListener(kotlin.jvm.functions.Function1)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void startRearDisplayPresentationSession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.google.android.gms.auth.api.credentials.Credential$Builder: Credential$Builder(java.lang.String)
com.otpless.views.OtplessContainerView: com.otpless.main.OtplessWebAuthnManager getWebAuthnManager()
io.flutter.view.TextureRegistry$SurfaceProducer: void scheduleFrame()
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.otpless.views.OtplessContainerView: OtplessContainerView(android.content.Context)
com.otpless.otplessflutter.OtplessFlutterPlugin: void onMethodCall$lambda$1(com.otpless.otplessflutter.OtplessFlutterPlugin,java.lang.String,java.lang.String,java.lang.Number)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.gms.fido.fido2.api.common.ResidentKeyRequirement: com.google.android.gms.fido.fido2.api.common.ResidentKeyRequirement valueOf(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.otpless.web.OtplessWebView$OtplessWebClient: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
com.otpless.network.OtplessRepository$requestSna$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.google.android.gms.common.api.GoogleApi: int zaa()
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: int hashCode()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.otpless.web.NativeWebManager: void openDeeplink(java.lang.String,org.json.JSONObject)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.otpless.R$id: R$id()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.otpless.network.OtplessRepository$requestSnaAsync$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
kotlin.jvm.internal.Lambda: int getArity()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.google.android.gms.auth.api.credentials.CredentialRequestResponse: CredentialRequestResponse()
com.otpless.network.OtplessRepository$pushEventAsync$1$1: OtplessRepository$pushEventAsync$1$1(kotlin.jvm.functions.Function1,com.otpless.tesseract.ApiData,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.otpless.main.OtplessViewImpl: kotlin.Unit lambda$handleEmptyWebResponse$2(java.lang.String,org.json.JSONObject,java.lang.String,java.lang.String)
com.otpless.main.OtplessView: void setHeadlessCallback(com.otpless.main.HeadlessResponseCallback)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder setShowAddAccountButton(boolean)
com.google.android.gms.auth.api.credentials.Credential: java.lang.String getPassword()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
com.otpless.network.OtplessCellularNetworkImpl: org.json.JSONObject access$makeErrorJson(com.otpless.network.OtplessCellularNetworkImpl,java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.otpless.network.OtplessRepository$pushEventAsync$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.dynamic.SupportFragmentWrapper: com.google.android.gms.dynamic.SupportFragmentWrapper wrap(androidx.fragment.app.Fragment)
com.otpless.web.NativeWebManager: void lambda$closeActivity$3()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
com.otpless.network.OtplessRepository$makeConnection$$inlined$CoroutineExceptionHandler$1: OtplessRepository$makeConnection$$inlined$CoroutineExceptionHandler$1(kotlinx.coroutines.CoroutineExceptionHandler$Key,kotlin.jvm.internal.Ref$ObjectRef)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.otpless.main.PhoneHintLauncherType: com.otpless.main.PhoneHintLauncherType[] $values()
com.google.android.gms.auth.api.credentials.CredentialRequest: boolean getSupportsPasswordLogin()
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.otpless.utils.Utility: void addContextInfo(android.content.Context,com.otpless.main.NativeWebListener)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onTrimMemory(int)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
com.otpless.main.OtplessViewContract: void onHeadlessResult(com.otpless.dto.HeadlessResponse,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
com.google.android.material.drawable.DrawableUtils$OutlineCompatL: void setConvexPath(android.graphics.Outline,android.graphics.Path)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
com.otpless.main.OtplessManager$ActivityLifeManager: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
com.otpless.utils.OtplessPhoneHintManager: void showPhoneNumberHint(boolean,kotlin.jvm.functions.Function1)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.google.android.gms.auth.api.credentials.Credential$Builder: com.google.android.gms.auth.api.credentials.Credential$Builder setAccountType(java.lang.String)
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: android.content.Context getPresentationContext()
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.otpless.web.NativeWebManager: void saveString(java.lang.String,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
com.otpless.web.OtplessWebListener: void sendHeadlessResponse(org.json.JSONObject,boolean)
com.otpless.tesseract.sim.OtplessSimStateReceiverApi: java.util.List savedEjectedSimEntries(android.content.Context)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
io.flutter.view.TextureRegistry$SurfaceProducer: int getHeight()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.otpless.main.OtplessViewContract: void closeView()
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest$Builder setIdTokenNonce(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
com.otpless.web.OtplessWebView: void lambda$callWebJs$0(java.lang.String)
com.otpless.tesseract.SecureAnalysisResponse: SecureAnalysisResponse()
com.otpless.tesseract.SecureAnalysisShdRequest: SecureAnalysisShdRequest(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeScheduleFrame(long)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
androidx.preference.SwitchPreferenceCompat: SwitchPreferenceCompat(android.content.Context,android.util.AttributeSet)
com.otpless.network.OtplessRepository$pushEvent$data$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.otpless.web.WebJsInterface: WebJsInterface(com.otpless.web.OtplessWebListener)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onAvailable$1: OtplessCellularNetworkImpl$forceCellular$2$onAvailable$1(java.lang.Object)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
com.otpless.network.OtplessCellularNetworkImpl: void access$afterCellularApiCompleted(com.otpless.network.OtplessCellularNetworkImpl)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.otpless.tesseract.SecureAnalysisFpRequest: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
com.otpless.network.ONetworkStatus: com.otpless.network.ONetworkStatus[] values()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.otpless.utils.OtplessPhoneHintManagerImpl$showPhoneNumberHint$1$1: java.lang.Object invoke(java.lang.Object)
com.otpless.web.OtplessWebView: OtplessWebView(android.content.Context)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.google.android.gms.auth.api.credentials.Credential: java.lang.String getId()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.otpless.web.OtplessWebListener: void otpAutoRead(boolean)
com.otpless.main.OtplessViewImpl: void loadLoginSdkClasses()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.otpless.utils.OtpReaderManager: void unregisterReceiver(android.content.Context)
com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder setShowCancelButton(boolean)
com.otpless.network.OtplessRepository: kotlinx.coroutines.Job pushEventAsync(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
kotlin.jvm.internal.CallableReference: boolean isOpen()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.otpless.network.OtplessRepository: com.otpless.tesseract.ApiData parseResponse(retrofit2.Response)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax[] values()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.otpless.web.NativeWebManager: void initWebAuthnSignin(org.json.JSONObject)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
com.google.android.gms.auth.api.credentials.CredentialRequest: boolean isPasswordLoginSupported()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.otpless.tesseract.SecureAuthDetail: java.lang.String component1()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$snaService$2: java.lang.Object invoke()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.otpless.dto.OtpLength: OtpLength(java.lang.String,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.android.gms.auth.api.credentials.IdToken: java.lang.String getAccountType()
com.otpless.network.OtplessRepository$makeConnection$job$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
com.google.android.gms.common.api.GoogleApi: java.lang.String getContextFeatureId()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.otpless.R$drawable: R$drawable()
androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
io.flutter.view.TextureRegistry$ImageTextureEntry: void release()
com.google.android.gms.auth.api.credentials.HintRequest: java.lang.String[] getAccountTypes()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
com.otpless.network.OtplessRepository$pushEventAsync$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.otpless.web.NativeWebManager: void hideLoader()
com.otpless.utils.OtplessPhoneHintManagerImpl: void register$lambda$0(android.app.Activity,com.otpless.utils.OtplessPhoneHintManagerImpl,androidx.activity.result.ActivityResult)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.otpless.main.PhoneHintLauncherType: com.otpless.main.PhoneHintLauncherType valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.otpless.network.OtplessRepository$snaService$2: OtplessRepository$snaService$2()
com.google.android.gms.auth.api.credentials.CredentialsClient: CredentialsClient(android.content.Context,com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.otpless.dto.HeadlessChannelType: java.lang.String getChannelTypeName()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.otpless.tesseract.SecureAuthDetail: SecureAuthDetail(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
com.otpless.main.WhatsappOtpReaderImpl: void initOneTap(kotlin.jvm.functions.Function1)
com.otpless.web.OtplessWebListener: void getString(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.otpless.tesseract.SecureAnalysisSuccess: boolean equals(java.lang.Object)
com.otpless.main.WhatsappOtpReader: boolean initZeroTap(kotlin.jvm.functions.Function1)
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.otpless.web.LoadingStatus: com.otpless.web.LoadingStatus valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.otpless.network.OtplessCellularNetworkImpl: void checkNetworks()
com.otpless.utils.EventConstant: EventConstant()
com.otpless.tesseract.OtplessSecureService: java.lang.Object startSecureAnalysis(java.util.Map,kotlin.coroutines.Continuation)
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String component1()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.otpless.tesseract.ApiException: ApiException(java.lang.String,int,org.json.JSONObject)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.otpless.dto.OtplessRequest: java.lang.String getAppId()
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] values()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.otpless.dto.OtpLength: int getSize()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.otpless.web.PageLoadStatusCallback: void onPageStatusChange(com.otpless.web.LoadingStatusData)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.otpless.main.OtplessView$-CC: boolean $default$onActivityResult(com.otpless.main.OtplessView,int,int,android.content.Intent)
com.otpless.tesseract.ApiData$Error: com.otpless.tesseract.ApiException getThrowable()
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest$Builder setAccountTypes(java.lang.String[])
com.otpless.web.NativeWebManager: kotlin.Unit lambda$sendHeadlessResponse$7(org.json.JSONObject,java.lang.String,java.lang.String)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
com.otpless.utils.OtplessPhoneHintManagerImpl$showPhoneNumberHint$1$1: OtplessPhoneHintManagerImpl$showPhoneNumberHint$1$1(com.otpless.utils.OtplessPhoneHintManagerImpl,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback asInterface(android.os.IBinder)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.otpless.web.NativeWebManager: void extraParams()
com.otpless.views.OtplessContainerView: void setViewContract(com.otpless.main.OtplessViewContract)
com.otpless.main.OtplessWebAuthnManagerImpl: void signIn(org.json.JSONObject,com.otpless.network.ApiCallback)
com.google.android.gms.auth.api.credentials.CredentialsApi: android.app.PendingIntent getHintPickerIntent(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.HintRequest)
com.otpless.network.OtplessRepository$makeConnection$job$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.otpless.network.OtplessRepository: java.lang.Object makeConnectionForRawResponse(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
com.otpless.tesseract.SimStateEntry: int hashCode()
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.preference.Preference: Preference(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.otpless.otplessflutter.OtplessFlutterPlugin: org.json.JSONObject onMethodCall$parseJsonArg(io.flutter.plugin.common.MethodCall)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.otpless.tesseract.ApiData$Error: java.lang.String toString()
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$1: java.lang.Object invoke()
androidx.constraintlayout.widget.Barrier: int getType()
com.google.android.gms.auth.api.credentials.IdToken: IdToken(java.lang.String,java.lang.String)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.otpless.network.OtplessCellularNetworkImpl: void requestNetwork(android.net.NetworkRequest,kotlin.jvm.functions.Function2)
com.otpless.network.OtplessCellularNetworkImpl: void bind(android.net.Network)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService asInterface(android.os.IBinder)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.otpless.main.OtplessWebAuthnManager: boolean onActivityResult(int,int,android.content.Intent)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.otpless.tesseract.SimStateEntry: java.lang.String component1()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
com.google.android.material.internal.BaselineLayout: int getBaseline()
androidx.browser.customtabs.CustomTabsIntent$Api24Impl: java.lang.String getDefaultLocale()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$job$1: OtplessRepository$makeConnectionForRawResponse$job$1(kotlin.jvm.functions.Function1,kotlin.jvm.internal.Ref$ObjectRef,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorErrorColor()
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.gms.auth.api.credentials.CredentialsOptions: CredentialsOptions(com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder,com.google.android.gms.auth.api.credentials.zbd)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id()
com.otpless.main.OtplessWebAuthnManagerImpl: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialCreationOptions makePublicKeyCreationOption(org.json.JSONObject)
com.otpless.dto.OtpDeliveryChannel: java.lang.String getChannelName()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.otpless.main.OtplessView: void setLoaderVisibility(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
com.otpless.network.OtplessNetworkManager: void removeListener(android.content.Context,com.otpless.network.OnConnectionChangeListener)
com.otpless.web.OtplessWebView: void access$500(com.otpless.web.OtplessWebView,com.otpless.web.LoadingStatus,java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.otpless.main.OtplessView$-CC: void $default$setLoaderVisibility(com.otpless.main.OtplessView,boolean)
com.otpless.main.PhoneHintLauncherType: com.otpless.main.PhoneHintLauncherType[] values()
com.google.android.gms.auth.api.credentials.IdToken: java.lang.String getIdToken()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
com.otpless.network.NetworkStatusData: NetworkStatusData(com.otpless.network.ONetworkStatus,com.otpless.network.ONetworkType,java.lang.String)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeaturesInNative(int)
com.otpless.web.OtplessWebViewWrapper: OtplessWebViewWrapper(android.content.Context,android.util.AttributeSet)
com.otpless.utils.OtplessPhoneHintManagerImpl: boolean onActivityResult(int,int,android.content.Intent)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.otpless.dto.HeadlessRequest: void addExtras(java.lang.String,java.lang.String)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
com.otpless.dto.HeadlessRequest: void addOtpCredential(org.json.JSONObject)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String getRegion()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1: java.lang.Object invoke(java.lang.Object)
com.otpless.main.OtplessManager: void disableViewScrapping()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.otpless.main.NativeWebListener: void afterHeadlessRequestPushed()
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.otpless.web.WebJsInterface: org.json.JSONObject getJson(org.json.JSONObject,java.lang.String)
com.otpless.utils.OtplessPhoneHintManager: void register(android.app.Activity,boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
com.otpless.network.OtplessCellularNetworkImplV2: android.content.Context access$getContext$p(com.otpless.network.OtplessCellularNetworkImplV2)
com.google.android.gms.fido.fido2.api.common.ResidentKeyRequirement: com.google.android.gms.fido.fido2.api.common.ResidentKeyRequirement[] values()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.otpless.dto.HeadlessRequest: java.lang.String getOtp()
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
com.otpless.dto.OtpDeliveryChannel: com.otpless.dto.OtpDeliveryChannel[] $values()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.otpless.main.OtplessManager$ActivityLifeManager: void onActivityStopped(android.app.Activity)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.otpless.network.NetworkStatusData: boolean isEnabled()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.otpless.utils.OtpReaderManager: void stopOtpReader()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims()
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.otpless.dto.HeadlessRequest: void setOtpLength(com.otpless.dto.OtpLength)
androidx.core.os.ConfigurationCompat$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.otpless.tesseract.SecureAnalysisShdRequest: com.otpless.tesseract.SecureAnalysisShdRequest copy(java.lang.String)
com.otpless.main.OtplessViewImpl: com.otpless.authfusion.FacebookSignInSdk getFacebookSignInSdk()
com.otpless.network.OtplessRepository$requestSna$2: java.lang.Object invoke(java.lang.Object)
com.otpless.network.OtplessConnectivityManager: java.lang.String networkInfo$linkName(com.otpless.network.OtplessConnectivityManager,android.net.Network)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.otpless.web.NativeWebManager: kotlin.Unit lambda$phoneNumberSelection$5(com.otpless.dto.Tuple)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.otpless.utils.OtplessPhoneHint: com.otpless.utils.OtplessPhoneHintManager getPhoneHintManager()
com.otpless.web.WebJsInterface: void webNativeAssist(java.lang.String)
com.otpless.tesseract.ApiData: ApiData()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.view.Surface getSurface()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.otpless.main.WhatsappOtpReaderImpl: com.whatsapp.otp.android.sdk.WhatsAppOtpIncomingIntentHandler getIncomingIntentHandler$otpless_android_sdk_release()
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
com.otpless.network.OtplessRepository: OtplessRepository()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void endRearDisplaySession()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.otpless.network.OtplessRepository$snaService$2: java.lang.Object invoke()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.otpless.utils.Utility: java.util.List getMessagingInstalledAppStatus(android.content.pm.PackageManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.otpless.R$string: R$string()
com.otpless.network.NetworkStatusData: java.lang.String getNetId()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
io.flutter.view.TextureRegistry$SurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.otpless.tesseract.SecureAuthDetail: com.otpless.tesseract.SecureAuthDetail copy(java.lang.String)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
com.google.android.gms.auth.api.credentials.zbf: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.otpless.network.OtplessRepository$makeConnection$job$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.otpless.web.OtplessWebListener: void appInfo()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.otpless.main.PhoneHintLauncherType: PhoneHintLauncherType(java.lang.String,int)
com.otpless.authfusion.AuthFusionManager: void setDebugLogging(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.otpless.tesseract.sim.SimDetailProvider: SimDetailProvider(android.content.Context)
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
com.google.android.gms.auth.api.credentials.Credentials: com.google.android.gms.auth.api.credentials.CredentialsClient getClient(android.app.Activity,com.google.android.gms.auth.api.credentials.CredentialsOptions)
androidx.constraintlayout.widget.Barrier: void setType(int)
io.flutter.view.TextureRegistry$ImageConsumer: android.media.Image acquireLatestImage()
com.otpless.main.OtplessRandomIdGenerator: java.lang.String getTrackingSessionId()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.otpless.views.OtplessContainerView: void hideLoader()
com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder: com.google.android.gms.auth.api.credentials.CredentialsOptions build()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: CredentialPickerConfig$Builder()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: boolean shouldShowAddAccountButton()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.otpless.network.OtplessRepository$warmupSna$1: com.otpless.network.SnaService invoke$lambda$0(kotlin.Lazy)
com.google.android.gms.fido.fido2.api.common.AttestationConveyancePreference: com.google.android.gms.fido.fido2.api.common.AttestationConveyancePreference valueOf(java.lang.String)
androidx.preference.MultiSelectListPreference: MultiSelectListPreference(android.content.Context,android.util.AttributeSet)
com.otpless.main.NativeWebListener: com.otpless.tesseract.OtplessSecureService getOtplessSecureService()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: FlutterRenderer$ImageReaderSurfaceProducer(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRead(com.google.android.gms.common.api.internal.TaskApiCall)
com.otpless.main.OtplessViewImpl: kotlin.Unit lambda$loadEventCallbackAndDebugLog$3(java.lang.String,org.json.JSONObject)
com.otpless.web.NativeWebManager: java.util.Map getAppInfo()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.otpless.main.OtplessManager$ActivityLifeManager: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.otpless.main.WhatsappOtpReader: boolean isAutoReadIntent(android.content.Intent)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.otpless.network.OtplessRepository$requestSnaAsync$1: OtplessRepository$requestSnaAsync$1(java.lang.String,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.otpless.web.LoadingStatusData: java.lang.String getMessage()
com.google.android.gms.common.internal.zzz: com.google.android.gms.common.internal.zzaa zzg(android.os.IBinder)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
androidx.preference.TwoStatePreference: TwoStatePreference(android.content.Context,android.util.AttributeSet)
com.google.android.gms.fido.fido2.api.common.AttestationConveyancePreference: com.google.android.gms.fido.fido2.api.common.AttestationConveyancePreference[] values()
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2: OtplessCellularNetworkImpl$forceCellular$2(com.otpless.network.OtplessCellularNetworkImpl,kotlin.jvm.functions.Function2)
com.otpless.utils.OtplessPhoneHintManagerImpl: OtplessPhoneHintManagerImpl()
com.otpless.otplessflutter.OtplessFlutterPlugin: kotlin.Unit showPhoneHint$lambda$9(kotlin.jvm.functions.Function1,com.otpless.dto.Tuple)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void releaseInternal()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: java.lang.String zbb(com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.otpless.network.OtplessRepository$warmupSna$1: void invoke(android.net.Network)
com.google.android.gms.auth.api.credentials.CredentialsClient: com.google.android.gms.tasks.Task request(com.google.android.gms.auth.api.credentials.CredentialRequest)
com.otpless.main.OtplessManager$ActivityLifeManager: void onActivityPaused(android.app.Activity)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.otpless.web.NativeWebManager: org.json.JSONObject makeWebAuthnError(java.lang.Exception,java.lang.String)
com.otpless.main.OtplessManager$ActivityLifeManager: void onActivityResumed(android.app.Activity)
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder setForNewAccount(boolean)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onUnavailable$1: void invoke()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void pruneImageReaderQueue()
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$1: OtplessRepository$makeConnectionForRawResponse$1(com.otpless.network.OtplessRepository,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.google.android.gms.common.api.Response: com.google.android.gms.common.api.Result getResult()
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.view.TextureRegistry$SurfaceProducer: int getWidth()
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$1$1$1: java.lang.Object invoke()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.otpless.utils.OtpReaderReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.HintRequest$Builder setIdTokenNonce(java.lang.String)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.otpless.otplessflutter.OtplessFlutterPlugin$Companion: OtplessFlutterPlugin$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.otpless.authfusion.AuthFusionManager: kotlin.jvm.functions.Function2 getOnEventReceivedCallback()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.otpless.tesseract.SecureAnalysisShdRequest: com.otpless.tesseract.SecureAnalysisShdRequest copy$default(com.otpless.tesseract.SecureAnalysisShdRequest,java.lang.String,int,java.lang.Object)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.google.android.gms.auth.api.credentials.IdToken: void writeToParcel(android.os.Parcel,int)
com.otpless.network.OtplessCellularNetwork: void openWithDataCellular(android.net.Uri,com.otpless.network.OtplessCellularDataListener)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
com.google.android.gms.auth.api.credentials.Credential: boolean equals(java.lang.Object)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType[] values()
com.otpless.main.OtplessViewImpl: void onActivitySaveInstance(android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.otpless.otplessflutter.OtplessFlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$job$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.otpless.main.OtplessViewImpl: void onOtplessEvent(com.otpless.main.OtplessEventData)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doRead(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType[] values()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.otpless.tesseract.SecureAuthDetail: boolean equals(java.lang.Object)
com.otpless.tesseract.SecureAnalysisSuccess: org.json.JSONObject component1()
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
com.otpless.utils.Utility: kotlin.Unit lambda$pushEvent$3(java.lang.String,com.otpless.tesseract.ApiData)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.otpless.tesseract.sim.OtplessSimStateReceiverKt: java.util.List getSavedSimEjectionEntries(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.google.android.material.chip.Chip: float getChipMinHeight()
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
com.otpless.utils.Utility: java.util.Map lambda$pushEvent$0(java.lang.String,org.json.JSONObject,java.lang.String,java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.gms.auth.api.credentials.HintRequest: boolean isIdTokenRequested()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.emoji2.text.EmojiExclusions$EmojiExclusions_Api34: java.util.Set getExclusions()
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.otpless.network.OtplessRepository$pushEventAsync$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.otpless.web.NativeWebManager: java.lang.Void lambda$checkWebAuthnAuthenticatorAvailability$13(java.lang.Boolean)
com.otpless.web.NativeWebManager: void lambda$getDataFromCellularNetwork$9(java.lang.String,org.json.JSONObject)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.otpless.main.OtplessRandomIdGenerator: org.json.JSONObject getRequestJsonForEvent()
com.otpless.network.OtplessCellularNetworkImpl: void openWithDataCellular(android.net.Uri,com.otpless.network.OtplessCellularDataListener)
com.otpless.utils.OtpResult: java.lang.String getOtp()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.otpless.network.OtplessNetworkManager: android.net.ConnectivityManager$NetworkCallback makeNetworkCallback()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.transition.ObjectAnimatorUtils$Api21Impl: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.graphics.Path)
com.otpless.main.OtplessViewImpl: com.otpless.main.WhatsappOtpReader getWhatsAppOtpReader()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
androidx.preference.PreferenceGroup: PreferenceGroup(android.content.Context,android.util.AttributeSet)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: int getWindowAreaStatus()
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest$Builder setServerClientId(java.lang.String)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.google.android.gms.auth.api.credentials.zbf: java.lang.Object[] newArray(int)
com.otpless.network.OtplessRepository$warmupSna$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1$1: OtplessCellularNetworkImpl$openWithDataCellular$1$1(com.otpless.network.OtplessCellularNetworkImpl,kotlin.jvm.functions.Function0,com.otpless.network.OtplessCellularDataListener)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.otpless.tesseract.sim.SimDetailProvider: org.json.JSONObject getAvailableSimCardDetails()
androidx.tracing.TraceApi29Impl: boolean isEnabled()
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.otpless.network.OtplessCellularNetworkImpl$cellularInfo$2: android.telephony.TelephonyManager invoke()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.gms.auth.api.credentials.IdentityProviders: IdentityProviders()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.google.android.gms.auth.api.credentials.zbf: zbf()
com.otpless.main.OtplessViewImpl: void addViewIfNotAdded()
com.otpless.main.OtplessViewImpl: void onConnectionChange(com.otpless.network.NetworkStatusData)
com.otpless.tesseract.OtplessSecureService: void startSecureAnalysis(com.otpless.tesseract.SecureAnalysisRequest,kotlin.jvm.functions.Function1)
com.otpless.network.OtplessCellularNetworkImplV2$telephonyService$2: OtplessCellularNetworkImplV2$telephonyService$2(com.otpless.network.OtplessCellularNetworkImplV2)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.google.android.material.chip.Chip: void setBackgroundColor(int)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.otpless.web.NativeWebManager$2: void onSuccess(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.otpless.main.OtplessViewImpl: boolean verifyIntent(android.content.Intent)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.otpless.utils.OtpReaderManager: OtpReaderManager()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.otpless.dto.HeadlessRequest: void setExpiry(int)
com.otpless.network.OtplessNetworkManager$1: OtplessNetworkManager$1(com.otpless.network.OtplessNetworkManager)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.otpless.dto.OtpLength: com.otpless.dto.OtpLength valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.otpless.main.OtplessViewImpl: void reloadToVerifyCode(com.otpless.web.OtplessWebView,android.net.Uri,java.lang.String)
com.otpless.otplessflutter.OtplessFlutterPlugin: void onMethodCall$lambda$0(com.otpless.otplessflutter.OtplessFlutterPlugin,boolean)
com.otpless.network.OtplessRepository: com.otpless.network.SnaService getSnaService()
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
com.otpless.web.OtplessWebListener: void codeVerificationStatus(org.json.JSONObject)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.google.android.gms.auth.api.credentials.zbb: java.lang.Object[] newArray(int)
com.google.android.gms.auth.api.credentials.HintRequest: java.lang.String getIdTokenNonce()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.otpless.tesseract.OtplessSecureService: org.json.JSONObject getAvailableSimCardDetails()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.otpless.network.OtplessCellularNetworkImpl: boolean isCellular(android.net.Network)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.otpless.network.ONetworkType: com.otpless.network.ONetworkType[] $values()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: UrlLauncherPlugin()
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.otpless.main.OtplessViewImpl: void startHeadless(com.otpless.dto.HeadlessRequest,com.otpless.main.HeadlessResponseCallback)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.otpless.views.OtplessContainerView: void lambda$setUiConfiguration$6(int)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.otpless.network.OtplessConnectivityManager$Companion: OtplessConnectivityManager$Companion()
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.otpless.main.HeadlessInitState: HeadlessInitState(java.lang.String,int)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
com.otpless.network.OtplessRepository$requestSna$2: OtplessRepository$requestSna$2(java.lang.String,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest$Builder setSupportsPasswordLogin(boolean)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.auth.api.credentials.Credential$Builder: com.google.android.gms.auth.api.credentials.Credential$Builder setName(java.lang.String)
com.google.android.material.button.MaterialButton: int getIconPadding()
com.otpless.main.OtplessView: boolean onActivityResult(int,int,android.content.Intent)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.otpless.tesseract.SecureAnalysisSuccess: java.lang.String toString()
com.otpless.tesseract.SecureAuthDetail: SecureAuthDetail()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.google.android.gms.auth.api.credentials.zba: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.otpless.dto.OtpLength: com.otpless.dto.OtpLength[] $values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.otpless.network.OtplessRepository$snaService$2: com.otpless.network.SnaService invoke()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.otpless.network.OtplessCellularNetworkImpl: OtplessCellularNetworkImpl(android.content.Context)
androidx.transition.Transition$Impl26: void setCurrentPlayTime(android.animation.Animator,long)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.otpless.network.OtplessCellularNetworkImpl: boolean access$isMainThread(com.otpless.network.OtplessCellularNetworkImpl)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doBestEffortWrite(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.otpless.R$xml: R$xml()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String getLinkedId()
com.otpless.web.OtplessWebViewWrapper: com.otpless.web.OtplessWebView getWebView()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.transition.ViewGroupUtils$Api29Impl: void suppressLayout(android.view.ViewGroup,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
com.otpless.tesseract.SecureAnalysisShdRequest: java.lang.String getApiKey()
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$job$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.google.android.material.internal.ClippableRoundedCornerLayout: float getCornerRadius()
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api$Client zab(android.os.Looper,com.google.android.gms.common.api.internal.zabq)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.otpless.network.OtplessRepository$requestSnaAsync$1$1: OtplessRepository$requestSnaAsync$1$1(kotlin.jvm.functions.Function1,com.otpless.tesseract.ApiData,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
com.google.android.gms.common.api.internal.zzd: zzd()
com.google.android.gms.auth.api.credentials.CredentialsClient: android.app.PendingIntent getHintPickerIntent(com.google.android.gms.auth.api.credentials.HintRequest)
com.otpless.utils.OtplessPhoneHintManagerImpl: void register$lambda$1(com.otpless.utils.OtplessPhoneHintManagerImpl,androidx.activity.result.ActivityResult)
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
com.otpless.network.OtplessCellularNetworkImpl: java.lang.String getOperator()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.otpless.main.OtplessView$-CC: void $default$setRetryVisibility(com.otpless.main.OtplessView,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.otpless.main.OtplessViewImpl: com.otpless.utils.OtplessPhoneHintManager getPhoneHintManager()
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
com.google.android.gms.auth.api.credentials.CredentialRequestResponse: com.google.android.gms.auth.api.credentials.Credential getCredential()
com.otpless.network.OtplessCellularNetworkImpl$cellularInfo$2: OtplessCellularNetworkImpl$cellularInfo$2(com.otpless.network.OtplessCellularNetworkImpl)
com.otpless.utils.OtpReaderReceiver: com.otpless.utils.OtpResult parseOtpMessage(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onAvailable$2: java.lang.Object invoke()
com.google.android.material.chip.Chip: void setMinLines(int)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.otpless.network.OtplessRepository$pushEventAsync$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
io.flutter.plugins.sharedpreferences.StringListLookupResultType: io.flutter.plugins.sharedpreferences.StringListLookupResultType[] values()
com.otpless.main.OtplessViewImpl: com.otpless.network.OtplessConnectivityManager getConnectivityManager()
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbc(com.google.android.gms.auth.api.credentials.Credential)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level valueOf(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.otpless.main.OtplessViewImpl: java.lang.String getTrackingSessionId()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
com.google.android.gms.auth.api.credentials.HintRequest: HintRequest(int,com.google.android.gms.auth.api.credentials.CredentialPickerConfig,boolean,boolean,java.lang.String[],boolean,java.lang.String,java.lang.String)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.otpless.otplessflutter.OtplessFlutterPlugin: void openOtplessLoginPage(org.json.JSONObject)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.otpless.web.OtplessWebListener: void whatsappOtpAutoRead(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.otpless.authfusion.AuthFusionManager: AuthFusionManager()
com.otpless.main.HeadlessInitState: com.otpless.main.HeadlessInitState[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onImage(android.media.ImageReader,android.media.Image)
com.otpless.network.OtplessCellularNetworkImplV2: org.json.JSONObject makeErrorJson(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$$inlined$CoroutineExceptionHandler$1: OtplessRepository$makeConnectionForRawResponse$$inlined$CoroutineExceptionHandler$1(kotlinx.coroutines.CoroutineExceptionHandler$Key,kotlin.jvm.internal.Ref$ObjectRef)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.otpless.utils.Utility: boolean isOtplessAppInstalled(android.content.Context)
com.otpless.main.OtplessView: boolean onBackPressed()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.google.android.material.button.MaterialButton: int getInsetTop()
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.otpless.web.NativeWebManager: void showLoader(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.otpless.network.OtplessRepository: java.lang.Object access$makeConnectionForRawResponse(com.otpless.network.OtplessRepository,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.transition.ViewUtilsApi22$Api29Impl: void setLeftTopRightBottom(android.view.View,int,int,int,int)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.otpless.tesseract.ApiException: int getStatusCode()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImages()
com.otpless.authfusion.AuthFusionManager: void logException(kotlin.jvm.functions.Function0)
com.otpless.views.OtplessContainerView: void lambda$setUiConfiguration$4(int)
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
com.otpless.R$dimen: R$dimen()
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1: java.lang.Object invoke(kotlin.coroutines.Continuation)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean handlesCropAndRotation()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.otpless.utils.OtplessUtility: boolean getSnaPrecacheEnableStatus(android.app.Activity)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
com.otpless.main.OtplessView: void initHeadless(java.lang.String)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1$data$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.otpless.utils.OtpResult: com.otpless.utils.OtpResult addStatusCode(int)
com.otpless.tesseract.ApiData$Error: com.otpless.tesseract.ApiData$Error copy(com.otpless.tesseract.ApiException)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.otpless.network.OtplessConnectivityManager: void onUnavailable()
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1$1: java.lang.Object invoke(kotlin.coroutines.Continuation)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.otpless.main.OtplessViewImpl: void removeView()
com.otpless.utils.OtplessPhoneHintManager$DefaultImpls: void showPhoneNumberHint$default(com.otpless.utils.OtplessPhoneHintManager,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.google.android.material.textfield.TextInputLayout: void setCursorColor(android.content.res.ColorStateList)
com.otpless.main.WhatsappOtpReaderImpl: void debugLog(java.lang.String)
com.otpless.utils.OtpResult: OtpResult(boolean,java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
androidx.preference.ListPreference: ListPreference(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.otpless.main.NativeWebListener: com.otpless.authfusion.GoogleCredentialSdk getGoogleSignInSdk()
com.otpless.main.OtplessRandomIdGenerator: java.lang.String getInstallationId()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.otpless.network.OtplessRepository$makeConnection$1: java.lang.Object invokeSuspend(java.lang.Object)
com.otpless.tesseract.SecureAnalysisRequest: SecureAnalysisRequest()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.otpless.network.OtplessCellularNetworkImpl: void execute(kotlin.jvm.functions.Function2)
com.otpless.web.OtplessWebView: java.lang.String getLoadedUrl()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.otpless.dto.HeadlessChannel: com.otpless.dto.HeadlessChannel[] $values()
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.android.gms.common.api.Response: void setResult(com.google.android.gms.common.api.Result)
com.otpless.main.OtplessZeroTapReceiver$Companion: void setOtpReaderImpl$otpless_android_sdk_release(java.lang.ref.WeakReference)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
com.otpless.main.OtplessView: void attachOtplessSecureService(com.otpless.tesseract.OtplessSecureService)
com.otpless.otplessflutter.OtplessFlutterPlugin: void attachSecureService(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.google.android.gms.dynamic.IFragmentWrapper$Stub: com.google.android.gms.dynamic.IFragmentWrapper asInterface(android.os.IBinder)
com.otpless.web.NativeWebManager: void startOtplessSecureSdk(java.lang.String,org.json.JSONObject)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.google.android.material.drawable.DrawableUtils$OutlineCompatR: void setPath(android.graphics.Outline,android.graphics.Path)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
com.otpless.dto.Tuple: Tuple(java.lang.Object,java.lang.Object)
com.otpless.network.OtplessRepository$requestSnaAsync$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
com.google.android.gms.auth.api.credentials.HintRequest$Builder: HintRequest$Builder()
com.otpless.tesseract.SecureAnalysisSuccess: com.otpless.tesseract.SecureAnalysisSuccess copy(org.json.JSONObject)
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType valueOf(java.lang.String)
com.otpless.main.WhatsappOtpReaderImpl$incomingIntentHandler$2: WhatsappOtpReaderImpl$incomingIntentHandler$2()
com.otpless.network.NetworkStatusData: NetworkStatusData()
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.otpless.main.OtplessViewImpl: android.view.ViewGroup findFrameLayout()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.otpless.utils.OtpReaderManager: com.otpless.utils.OtpReaderManager getInstance()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$800(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.otpless.network.OtplessRepository$pushEventAsync$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.otpless.utils.OtplessUtility: OtplessUtility()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
com.otpless.main.OtplessViewImpl: void initHeadless(java.lang.String,java.lang.String,long)
com.otpless.tesseract.SimStateEntry: SimStateEntry(java.lang.String,long)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.otpless.otplessflutter.R: R()
android.support.customtabs.trusted.ITrustedWebActivityService$Stub: android.support.customtabs.trusted.ITrustedWebActivityService asInterface(android.os.IBinder)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doWrite(com.google.android.gms.common.api.internal.TaskApiCall)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorColor()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
com.otpless.tesseract.SecureAnalysisShdRequest: boolean equals(java.lang.Object)
com.otpless.main.OtplessViewImpl: java.lang.String getInstallationId()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: void setPresentationView(android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void scheduleFrame()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.otpless.utils.OtplessUtility: java.lang.String[] getSnaPrecacheUrls(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
android.support.customtabs.ICustomTabsService$Stub: android.support.customtabs.ICustomTabsService asInterface(android.os.IBinder)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.otpless.network.OtplessCellularNetworkImpl: boolean isCellularBoundToProcess()
com.otpless.network.OtplessRepository$warmupSna$1: com.otpless.network.SnaService access$invoke$lambda$0(kotlin.Lazy)
com.otpless.web.NativeWebManager$1: void onSuccess(java.lang.Object)
com.otpless.main.OtplessWebAuthnManagerImpl: void register(org.json.JSONObject,com.otpless.network.ApiCallback)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase valueOf(java.lang.String)
com.otpless.otplessflutter.OtplessFlutterPlugin: int softParseStatusCode(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.otpless.dto.HeadlessRequest: void setEmail(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.google.android.material.chip.Chip: void setElevation(float)
com.otpless.dto.HeadlessChannelType: HeadlessChannelType(java.lang.String,int,java.lang.String)
com.google.android.gms.common.ErrorDialogFragment: ErrorDialogFragment()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.otpless.R$anim: R$anim()
com.otpless.tesseract.ApiData$Error: com.otpless.tesseract.ApiData$Error copy$default(com.otpless.tesseract.ApiData$Error,com.otpless.tesseract.ApiException,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.preference.UnPressableLinearLayout: UnPressableLinearLayout(android.content.Context,android.util.AttributeSet)
com.otpless.main.OtplessViewImpl: android.app.Activity getActivity()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task disconnectService()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.gms.dynamic.ObjectWrapper: java.lang.Object unwrap(com.google.android.gms.dynamic.IObjectWrapper)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.otpless.main.OtplessManager$ActivityLifeManager: OtplessManager$ActivityLifeManager(com.otpless.main.OtplessManager,com.otpless.main.OtplessManager$1)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: double deltaMillis(long)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$snaService$2: com.otpless.network.SnaService invoke()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.otpless.network.OtplessConnectivityManager$Companion: OtplessConnectivityManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$1: OtplessRepository$requestSnaOnCellularNetwork$1$1(java.lang.String,kotlin.Lazy,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.otpless.utils.OtplessPhoneHintManagerImpl: void register(android.app.Activity,boolean)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.otpless.web.OtplessWebView: com.otpless.web.LoadingStatus access$202(com.otpless.web.OtplessWebView,com.otpless.web.LoadingStatus)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.otpless.main.OtplessView: void initHeadless(java.lang.String,java.lang.String)
com.otpless.network.OtplessRepository$warmupSna$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
com.otpless.dto.OtplessResponse: java.lang.String toJsonString()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
com.otpless.web.OtplessWebListener: void logoutSdk(org.json.JSONObject)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.google.android.gms.common.api.GoogleApi: java.lang.String getContextAttributionTag()
com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.HintRequest$Builder setAccountTypes(java.lang.String[])
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
com.otpless.web.OtplessWebView$OtplessWebClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.otpless.authfusion.FacebookSignInSdk: void registerCallback(kotlin.jvm.functions.Function1)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.google.android.material.button.MaterialButton: int getIconGravity()
com.otpless.network.OtplessRepository$pushEvent$data$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.HintRequest$Builder setIdTokenRequested(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.gms.fido.fido2.api.common.ErrorCode: com.google.android.gms.fido.fido2.api.common.ErrorCode[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.otpless.web.NativeWebManager: com.otpless.web.OtplessWebView access$000(com.otpless.web.NativeWebManager)
com.otpless.web.WebLoaderCallback: void showLoader(java.lang.String)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.otpless.dto.HeadlessResponse: HeadlessResponse(java.lang.String,org.json.JSONObject,int)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.otpless.main.OtplessViewImpl: com.otpless.main.OtplessWebAuthnManager getWebAuthnManager()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.otpless.main.WhatsappOtpReaderImpl: boolean isAutoReadIntent(android.content.Intent)
com.otpless.web.OtplessWebListener: void changeWebViewHeight(java.lang.Integer)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.otpless.network.OtplessCellularNetworkImpl: void networkType(android.net.NetworkCapabilities)
com.otpless.network.OtplessCellularNetworkImpl: boolean access$isCellularBoundToProcess(com.otpless.network.OtplessCellularNetworkImpl)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void finalize()
com.whatsapp.otp.android.sdk.enums.WhatsAppClientType: com.whatsapp.otp.android.sdk.enums.WhatsAppClientType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
com.otpless.network.OtplessRepository$warmupSna$1: OtplessRepository$warmupSna$1(java.lang.String[],android.content.SharedPreferences)
com.otpless.tesseract.SecureAnalysisError: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void removeRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.otpless.main.NativeWebListener: com.otpless.network.OtplessConnectivityManager getConnectivityManager()
com.google.android.gms.auth.api.credentials.IdToken: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: long id()
com.otpless.web.OtplessWebListener: void initWebAuthnRegistration(org.json.JSONObject)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
com.google.android.material.chip.Chip: void setChipIconResource(int)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImageReaders()
com.otpless.main.OtplessWebAuthnManagerImpl: org.json.JSONObject makeRegistrationCompleteJson(com.google.android.gms.fido.fido2.api.common.PublicKeyCredential)
com.otpless.web.NativeWebManager: void startSdkLogin(org.json.JSONObject)
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
com.otpless.views.OnColorParseCallback: void onColorParsed(int)
io.flutter.embedding.engine.FlutterJNI: void scheduleFrame()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onAvailable$2: void invoke()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.transition.TransitionUtils$Api28Impl: android.graphics.Bitmap createBitmap(android.graphics.Picture)
com.otpless.main.OtplessViewImpl: org.json.JSONObject getRequestJsonForEvent()
com.otpless.tesseract.SecureAuthDetail: com.otpless.tesseract.SecureAuthDetail copy$default(com.otpless.tesseract.SecureAuthDetail,java.lang.String,int,java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.otpless.web.OtplessWebListener: void phoneNumberSelection(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$302(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,boolean)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.otpless.main.OtplessView: void showOtplessLoginPage(com.otpless.dto.OtplessRequest,com.otpless.views.OtplessUserDetailCallback)
com.otpless.network.OtplessNetworkManager: android.content.BroadcastReceiver makeNetworkReceiver()
com.otpless.network.ONetworkType: com.otpless.network.ONetworkType valueOf(java.lang.String)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.google.android.gms.auth.api.credentials.CredentialRequest: void writeToParcel(android.os.Parcel,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.otpless.web.NativeWebManager: void initWebAuthnRegistration(org.json.JSONObject)
com.otpless.network.OtplessRepository$pushEventAsync$1: OtplessRepository$pushEventAsync$1(java.util.Map,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.otpless.network.OtplessRepository: retrofit2.Retrofit build$default(com.otpless.network.OtplessRepository,java.lang.String,android.net.Network,boolean,int,java.lang.Object)
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$1$1$1: void invoke()
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.otpless.R$styleable: R$styleable()
com.otpless.network.OtplessRepository$warmupSna$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.otpless.web.OtplessWebView: void injectJavaScript()
com.otpless.dto.Tuple: java.lang.Object getFirst()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.otpless.views.ColorUtils: ColorUtils()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doWrite(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.android.material.chip.Chip: void setChipTextResource(int)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.otpless.web.OtplessWebListener: void startOtplessSecureSdk(java.lang.String,org.json.JSONObject)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.otpless.network.NetworkStatusData: boolean isWifi()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
com.otpless.network.OtplessConnectivityManager: OtplessConnectivityManager(android.net.ConnectivityManager)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.otpless.tesseract.SecureAnalysisError: int hashCode()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.otpless.main.OtplessViewImpl: com.otpless.dto.HeadlessRequest access$000(com.otpless.main.OtplessViewImpl)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.otpless.main.OtplessWebAuthnManagerImpl: void isPlatformAuthenticatorAvailable(com.otpless.main.ResultCallback)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.otpless.main.OtplessViewContract$-CC: void $default$closeView(com.otpless.main.OtplessViewContract)
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: CredentialPickerConfig(int,boolean,boolean,boolean,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
com.otpless.main.OtplessViewImpl: java.lang.String getCustomLoadingUrl()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.GoogleApiClient asGoogleApiClient()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
com.otpless.web.NativeWebManager: org.json.JSONObject makeSecureAnalysisError(java.lang.String,java.lang.String)
com.otpless.web.OtplessWebListener: void extraParams()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api$ApiOptions getApiOptions()
com.otpless.dto.OtplessResponse: org.json.JSONObject getData()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.otpless.tesseract.ApiData$Success: int hashCode()
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.otpless.network.OtplessRepository$requestSnaAsync$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
com.otpless.network.OtplessRepository: com.otpless.network.EventService access$getPushEventService(com.otpless.network.OtplessRepository)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.otpless.web.NativeWebManager: NativeWebManager(android.app.Activity,com.otpless.web.OtplessWebView,com.otpless.main.WebActivityContract)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.preference.internal.PreferenceImageView: PreferenceImageView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder: com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder forceEnableSaveDialog()
com.otpless.network.OtplessRepository: java.lang.Object makeConnection(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.otpless.views.OtplessLoaderEvent: com.otpless.views.OtplessLoaderEvent[] $values()
com.otpless.dto.HeadlessChannel: HeadlessChannel(java.lang.String,int,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbg(com.google.android.gms.auth.api.credentials.Credential)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.otpless.tesseract.ApiData$Success: java.lang.Object component1()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.otpless.main.OtplessViewImpl$1: kotlin.Unit lambda$onFinish$0(org.json.JSONObject,java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
com.otpless.tesseract.ApiData$Success: com.otpless.tesseract.ApiData$Success copy(java.lang.Object)
com.otpless.web.WebJsInterface: java.lang.Double getDouble(org.json.JSONObject,java.lang.String)
com.otpless.authfusion.AuthFusionManager: void pushEvent$default(com.otpless.authfusion.AuthFusionManager,java.lang.String,org.json.JSONObject,int,java.lang.Object)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.otpless.utils.OtplessPhoneHintManagerImpl: android.app.Activity access$getMActivity$p(com.otpless.utils.OtplessPhoneHintManagerImpl)
com.otpless.utils.OtplessUtility: java.lang.String getDeviceInfoString()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.otpless.main.OtplessView: void setCallback(com.otpless.dto.OtplessRequest,com.otpless.views.OtplessUserDetailCallback)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.otpless.main.OtplessWebAuthnManagerImpl: org.json.JSONObject makeSignInCompleteJson(com.google.android.gms.fido.fido2.api.common.PublicKeyCredential)
com.otpless.web.NativeWebManager: com.otpless.main.NativeWebListener getNativeWebListener()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.otpless.network.OtplessCellularNetworkImpl: void networkInfo(android.net.Network)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.material.chip.Chip: float getIconStartPadding()
com.otpless.otplessflutter.OtplessFlutterPlugin: com.otpless.dto.HeadlessResponse convertMapToHeadlessResponse(java.util.Map)
com.otpless.main.NativeWebListener: void handleEmptyWebResponse(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.otpless.main.OtplessViewImpl: void closeView()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.otpless.utils.OtpReaderManager: void startOtpReader(android.content.Context,com.otpless.utils.OtpResultListener)
com.otpless.network.ONetworkStatus: com.otpless.network.ONetworkStatus valueOf(java.lang.String)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRegisterEventListener(com.google.android.gms.common.api.internal.RegistrationMethods)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.llfbandit.app_links.AppLinksPlugin: AppLinksPlugin()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
androidx.preference.internal.PreferenceImageView: int getMaxWidth()
com.otpless.network.OtplessRepository$pushEventAsync$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.otpless.utils.Utility: kotlin.Unit lambda$pushEvent$1(java.lang.String,com.otpless.tesseract.ApiData)
com.otpless.network.OtplessCellularNetworkImpl: boolean isMainThread()
com.otpless.tesseract.SimStateEntry: com.otpless.tesseract.SimStateEntry copy(java.lang.String,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.otpless.authfusion.AuthFusionManager: boolean isDebugLogging()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
com.otpless.main.OtplessViewImpl: void onVerificationResult(int,org.json.JSONObject)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.otpless.web.NativeWebManager: void warmupUrlCache(java.util.List)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.otpless.web.LoadingStatus: LoadingStatus(java.lang.String,int)
com.google.android.gms.auth.api.credentials.zba: java.lang.Object[] newArray(int)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
com.otpless.main.OtplessViewImpl: boolean isHeadlessRequestPushed()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.google.android.gms.fido.fido2.api.common.EC2Algorithm: com.google.android.gms.fido.fido2.api.common.EC2Algorithm[] values()
com.otpless.views.OtplessContainerView: OtplessContainerView(android.content.Context,android.util.AttributeSet,int)
com.otpless.main.WhatsappOtpReaderImpl: void processOneTapIntent(android.content.Intent)
com.otpless.network.ApiCallback: void onError(java.lang.Exception)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.otpless.dto.OtplessRequest: java.util.HashMap getExtras()
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2$onAvailable$2: OtplessCellularNetworkImpl$forceCellular$2$onAvailable$2(java.lang.Object)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType valueOf(java.lang.String)
com.otpless.dto.OtpDeliveryChannel: com.otpless.dto.OtpDeliveryChannel from(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.otpless.main.ResultCallback: java.lang.Object invoke(java.lang.Object)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.google.android.gms.auth.api.credentials.CredentialRequest: boolean isIdTokenRequested()
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.otpless.network.OtplessRepository: java.lang.Object pushEvent(java.util.Map,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
androidx.preference.PreferenceScreen: PreferenceScreen(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.otpless.network.OtplessRepository$requestSnaAsync$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.otpless.network.OtplessCellularNetworkImpl: void activeNetworkInfo()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.otpless.views.OtplessContainerView: void onVerificationResult(int,org.json.JSONObject)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void release()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1$snaService$2: OtplessRepository$requestSnaOnCellularNetwork$1$snaService$2(android.net.Network)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.otpless.network.OtplessCellularNetworkImpl: android.telephony.TelephonyManager getCellularInfo()
com.otpless.otplessflutter.OtplessFlutterPlugin: kotlin.Unit onMethodCall$lambda$2(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$1$1: void run()
com.otpless.tesseract.ApiData$Error: int hashCode()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.otpless.web.NativeWebManager: void onOtpReadResult(com.otpless.utils.OtpResult)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.otpless.web.NativeWebManager: kotlin.Unit lambda$startOtplessSecureSdk$14(com.otpless.tesseract.SecureAnalysisResponse)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.otpless.main.OtplessViewImpl: OtplessViewImpl(android.app.Activity)
com.otpless.network.OtplessRepository: retrofit2.Retrofit build(java.lang.String,android.net.Network,boolean)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
com.google.android.gms.fido.fido2.api.common.EC2Algorithm: com.google.android.gms.fido.fido2.api.common.EC2Algorithm valueOf(java.lang.String)
com.otpless.network.OtplessCellularNetworkImpl$connectivityManager$2: java.lang.Object invoke()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
com.otpless.views.OtplessUserDetailCallback: void onOtplessUserDetail(com.otpless.dto.OtplessResponse)
com.otpless.otplessflutter.OtplessFlutterPlugin: OtplessFlutterPlugin()
com.otpless.views.OtplessContainerView: void setUiConfiguration(org.json.JSONObject)
com.otpless.network.OtplessRepository$makeConnection$job$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.otpless.dto.OtpDeliveryChannel: com.otpless.dto.OtpDeliveryChannel valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.otpless.dto.HeadlessRequest: java.util.HashMap getExtras()
com.otpless.network.OtplessCellularDataListener: void onCellularDataResult(org.json.JSONObject)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.gms.fido.fido2.api.common.TokenBinding$TokenBindingStatus: com.google.android.gms.fido.fido2.api.common.TokenBinding$TokenBindingStatus valueOf(java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
com.otpless.views.OtplessContainerView: void disableHeadlessConfig()
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.otpless.web.NativeWebManager: void otpAutoRead(boolean)
com.otpless.network.NetworkStatusData: com.otpless.network.NetworkStatusData disabled()
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: android.util.DisplayMetrics getRearDisplayMetrics()
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
com.otpless.web.LoadingStatusData: java.lang.String getDescription()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.otpless.otplessflutter.OtplessFlutterPlugin: void startHeadless$lambda$6(com.otpless.otplessflutter.OtplessFlutterPlugin,com.otpless.dto.HeadlessRequest)
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$$inlined$schedule$1: void run()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1: OtplessCellularNetworkImpl$openWithDataCellular$1(com.otpless.network.OtplessCellularNetworkImpl,android.net.Uri,com.otpless.network.OtplessCellularDataListener)
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$1$1: OtplessCellularNetworkImpl$requestNetwork$1$1(kotlin.jvm.functions.Function2,com.otpless.network.OtplessCellularNetworkImpl)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.otpless.web.LoadingStatus: com.otpless.web.LoadingStatus[] $values()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.google.android.gms.fido.fido2.api.common.TokenBinding$TokenBindingStatus: com.google.android.gms.fido.fido2.api.common.TokenBinding$TokenBindingStatus[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$502(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1: void invoke(boolean,kotlin.jvm.functions.Function0)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.otpless.main.NativeWebListener: void closeCountDownTimer()
android.support.customtabs.IPostMessageService$Stub: android.support.customtabs.IPostMessageService asInterface(android.os.IBinder)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.otpless.network.OtplessCellularNetworkImpl$requestNetwork$$inlined$schedule$1: OtplessCellularNetworkImpl$requestNetwork$$inlined$schedule$1(kotlin.jvm.functions.Function2,com.otpless.network.OtplessCellularNetworkImpl)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2: void onAvailable(android.net.Network)
com.otpless.main.WhatsappOtpReaderImpl: boolean isWhatsAppHandshakeSupported(android.content.Context)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.zact zac(android.content.Context,android.os.Handler)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.otpless.network.OtplessRepository$requestSnaAsync$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.google.android.gms.auth.api.credentials.Credential: java.util.List getIdTokens()
com.otpless.tesseract.ApiException: org.json.JSONObject getResponseJson()
com.otpless.network.OtplessRepository: okhttp3.OkHttpClient getClient(android.net.Network,boolean)
com.google.android.material.chip.Chip: void setChecked(boolean)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getHeight()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.otpless.views.OtplessContainerView: android.view.ViewGroup getParentView()
com.otpless.network.OtplessRepository$makeConnection$1: OtplessRepository$makeConnection$1(com.otpless.network.OtplessRepository,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.gms.common.internal.ICancelToken$Stub: com.google.android.gms.common.internal.ICancelToken asInterface(android.os.IBinder)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.otpless.network.OtplessNetworkManager: com.otpless.network.OtplessNetworkManager getInstance()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setSize(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.otpless.main.OtplessEventCallback: void onOtplessEvent(com.otpless.main.OtplessEventData)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
com.otpless.network.ONetworkType: com.otpless.network.ONetworkType[] values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
com.otpless.utils.OnceUseProp: void setData(java.lang.Object)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener)
com.otpless.otplessflutter.OtplessFlutterPlugin: boolean onActivityResult(int,int,android.content.Intent)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.otpless.main.WhatsappOtpReader: void initOneTap(kotlin.jvm.functions.Function1)
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1: void invoke(android.net.Network)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.otpless.main.NativeWebListener: void onOtplessEvent(com.otpless.main.OtplessEventData)
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader29()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.otpless.network.OtplessRepository$requestSnaOnCellularNetwork$1: com.otpless.network.SnaService access$invoke$lambda$0(kotlin.Lazy)
com.otpless.network.OtplessRepository$requestSnaAsync$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.window.extensions.core.util.function.Consumer: void accept(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
io.flutter.plugins.pathprovider.PathProviderPlugin: PathProviderPlugin()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.otpless.otplessflutter.OtplessFlutterPlugin: kotlin.Unit setSimEjectionListener$lambda$10(com.otpless.otplessflutter.OtplessFlutterPlugin,java.util.List)
com.otpless.network.OtplessCellularNetworkImpl: void access$cancelTimeout(com.otpless.network.OtplessCellularNetworkImpl)
com.otpless.tesseract.ApiData$Success: java.lang.Object getData()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void markDirty()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.otpless.tesseract.sim.OtplessSimStateReceiverApi: void setSimStateChangeListener(kotlin.jvm.functions.Function1)
com.otpless.otplessflutter.OtplessFlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.otpless.web.NativeWebManager: void getString(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.otpless.authfusion.FacebookSignInSdk: void onActivityResult(int,int,android.content.Intent)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.otpless.network.OtplessRepository$makeConnectionForRawResponse$1: java.lang.Object invokeSuspend(java.lang.Object)
com.otpless.R$attr: R$attr()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String getEndPointUrl()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.otpless.web.OtplessWebView: void attachNativeWebManager(com.otpless.web.OtplessWebListener)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
com.otpless.utils.OtpReaderManager: void lambda$startOtpReader$0(java.lang.Exception)
com.otpless.network.OtplessCellularNetworkImpl: void access$bind(com.otpless.network.OtplessCellularNetworkImpl,android.net.Network)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$2: void onUnavailable()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.otpless.main.WebActivityContract: android.view.ViewGroup getParentView()
com.otpless.main.OtplessViewImpl: void setEventCallback(com.otpless.main.OtplessEventCallback)
com.google.android.gms.dynamic.IObjectWrapper$Stub: com.google.android.gms.dynamic.IObjectWrapper asInterface(android.os.IBinder)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
com.google.android.gms.common.api.GoogleApi: android.os.Looper getLooper()
com.otpless.web.OtplessWebListener: void initWebAuthnSignin(org.json.JSONObject)
com.otpless.main.OtplessViewContract: void onVerificationResult(int,org.json.JSONObject)
com.otpless.web.NativeWebManager: void lambda$getDataFromCellularNetwork$10(java.lang.String,org.json.JSONObject)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.otpless.dto.Tuple: void setFirst(java.lang.Object)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbb(com.google.android.gms.auth.api.credentials.Credential)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
com.otpless.network.ONetworkStatus: com.otpless.network.ONetworkStatus[] $values()
com.otpless.network.OtplessCellularNetworkImpl: org.json.JSONObject makeErrorJson(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.otpless.network.OtplessCellularNetworkImpl$forceCellular$1: void invoke()
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.gms.auth.api.credentials.Credential: int hashCode()
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
com.otpless.dto.Triple: void setThird(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.otpless.tesseract.SecureAnalysisError: java.lang.Exception getError()
androidx.transition.ViewUtilsApi19$Api29Impl: void setTransitionAlpha(android.view.View,float)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection valueOf(java.lang.String)
com.otpless.main.OtplessView: void commitHeadlessResponse(com.otpless.dto.HeadlessResponse)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.otpless.tesseract.ApiException: java.lang.String toString()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.otpless.dto.Tuple: void setSecond(java.lang.Object)
com.otpless.network.OtplessRepository$pushEvent$data$1: OtplessRepository$pushEvent$data$1(java.util.Map,kotlin.coroutines.Continuation)
com.otpless.web.OtplessWebView: OtplessWebView(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.otpless.views.OtplessContainerView: void showRetry(java.lang.String)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.otpless.network.OtplessRepository$warmupSna$1$snaService$2: com.otpless.network.SnaService invoke()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.otpless.main.OtplessViewImpl$1: OtplessViewImpl$1(com.otpless.main.OtplessViewImpl,long,long)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.otpless.main.OtplessViewImpl: org.json.JSONObject getExtraParams()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(android.graphics.Path)
com.otpless.main.NativeWebListener: com.otpless.network.OtplessCellularNetwork getOtplessCellularNetwork()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.otpless.main.HeadlessInitState: com.otpless.main.HeadlessInitState valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.otpless.views.ColorUtils: void parseColor(java.lang.String,com.otpless.views.OnColorParseCallback)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
kotlin.jvm.internal.FunctionReference: boolean isInline()
com.google.android.gms.auth.api.credentials.zbc: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.auth.api.credentials.zbc: zbc()
com.google.android.material.textfield.TextInputLayout: void setCursorErrorColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.otpless.tesseract.sim.OtplessSimStateReceiver: OtplessSimStateReceiver()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
com.otpless.main.WhatsappOtpReaderImpl: boolean initZeroTap(kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.otpless.network.OtplessRepository$warmupSna$1$1: OtplessRepository$warmupSna$1$1(java.lang.String[],android.content.SharedPreferences,kotlin.Lazy,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.otpless.utils.OtpResult: int getStatusCode()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
com.otpless.main.OtplessZeroTapReceiver$Companion: OtplessZeroTapReceiver$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
com.otpless.main.OtplessViewImpl: kotlin.Unit lambda$commitHeadlessResponse$1(org.json.JSONObject,java.lang.String,java.lang.String)
com.otpless.network.OtplessCellularNetworkImpl: void forceCellular(int[],int[],kotlin.jvm.functions.Function2)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.otpless.dto.OtpLength: com.otpless.dto.OtpLength[] values()
com.otpless.tesseract.SimStateEntry: java.lang.String toString()
com.otpless.dto.Triple: Triple(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.otpless.web.NativeWebManager: void getDataFromCellularNetwork(java.lang.String,java.lang.String)
com.otpless.network.OtplessCellularNetworkImpl: boolean isCellularAvailable()
com.otpless.network.OtplessRepository: void getClient$lambda$2$lambda$0(java.lang.String)
com.otpless.main.OtplessViewImpl: kotlin.Unit lambda$restoreSavedInstance$0(org.json.JSONObject)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.otpless.dto.HeadlessResponse: com.otpless.dto.HeadlessResponse makeInternetErrorResponse(java.lang.String,java.lang.String)
com.otpless.R$layout: R$layout()
com.otpless.web.OtplessWebListener: void deviceDetails()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.otpless.network.OtplessNetworkManager$1: void onLost(android.net.Network)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
com.google.android.gms.auth.api.credentials.Credential: java.lang.String getAccountType()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader33()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.material.chip.Chip: float getChipIconSize()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.otpless.web.NativeWebManager: org.json.JSONObject makeAuthFusionError(java.lang.Exception,java.lang.String)
com.otpless.network.NetworkStatusData: boolean isCellular()
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
com.otpless.network.OtplessRepository: com.otpless.network.EventService getPushEventService()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.google.android.gms.auth.api.credentials.Credential: java.lang.String zbe(com.google.android.gms.auth.api.credentials.Credential)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.otpless.network.OtplessCellularNetworkImpl: boolean isCellularDataEnabled()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.otpless.main.OtplessZeroTapReceiver$Companion: OtplessZeroTapReceiver$Companion()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.otpless.views.OtplessContainerView: com.otpless.web.OtplessWebView getWebView()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.otpless.network.OtplessCellularNetworkImpl: void boundNetwork()
com.otpless.tesseract.SecureAnalysisSuccess: SecureAnalysisSuccess(org.json.JSONObject)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.otpless.main.OtplessWebAuthnManagerImpl: boolean onActivityResult(int,int,android.content.Intent)
com.otpless.main.OtplessViewImpl: android.view.ViewGroup findParentView()
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
com.google.android.gms.auth.api.credentials.CredentialsApi: com.google.android.gms.common.api.PendingResult disableAutoSignIn(com.google.android.gms.common.api.GoogleApiClient)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.google.android.gms.auth.api.credentials.Credential$Builder: Credential$Builder(com.google.android.gms.auth.api.credentials.Credential)
com.google.android.material.textfield.TextInputLayout: int getMinEms()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.google.android.gms.auth.api.credentials.HintRequest: boolean isEmailAddressIdentifierSupported()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.otpless.views.OtplessContainerView: void onHeadlessResult(com.otpless.dto.HeadlessResponse,boolean)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
com.otpless.main.OtplessWebAuthnManagerImpl: byte[] decodeBase64(java.lang.String)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: CredentialRequest$Builder()
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.google.android.gms.auth.api.credentials.Credential$Builder: com.google.android.gms.auth.api.credentials.Credential$Builder setProfilePictureUri(android.net.Uri)
com.otpless.main.OtplessEventData: int getEventCode()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.otpless.tesseract.SecureAnalysisFpRequest: com.otpless.tesseract.SecureAnalysisFpRequest copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.google.android.gms.auth.api.credentials.Credentials: com.google.android.gms.auth.api.credentials.CredentialsClient getClient(android.app.Activity)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.otpless.utils.OtpResult: java.lang.String toString()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.preference.SwitchPreference: SwitchPreference(android.content.Context,android.util.AttributeSet)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.otpless.authfusion.AuthFusionSdk: void startAuth(org.json.JSONObject,kotlin.jvm.functions.Function1)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.otpless.tesseract.ApiException: ApiException(java.lang.Throwable,int,org.json.JSONObject)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: android.util.DisplayMetrics getWindowAreaDisplayMetrics()
com.otpless.web.WebJsInterface: java.lang.Boolean getBoolean(org.json.JSONObject,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary(android.content.Context)
com.otpless.web.NativeWebManager: void whatsappOtpAutoRead(java.lang.String)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
com.otpless.network.OtplessRepository: kotlinx.coroutines.Job requestSnaAsync(java.lang.String,kotlin.jvm.functions.Function1)
com.google.android.gms.dynamic.FragmentWrapper: com.google.android.gms.dynamic.FragmentWrapper wrap(android.app.Fragment)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.otpless.main.OtplessManager: com.otpless.main.OtplessManager getInstance()
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.otpless.main.OtplessViewImpl: void showOtplessLoginPage(com.otpless.dto.OtplessRequest,com.otpless.views.OtplessUserDetailCallback)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
io.flutter.view.TextureRegistry$SurfaceProducer: void release()
io.flutter.plugins.sharedpreferences.StringListLookupResultType: io.flutter.plugins.sharedpreferences.StringListLookupResultType valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.otpless.network.OtplessCellularNetworkImpl: boolean access$isCellularAvailable(com.otpless.network.OtplessCellularNetworkImpl)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.google.android.gms.fido.fido2.api.common.zzay: com.google.android.gms.fido.fido2.api.common.zzay[] values()
com.otpless.network.OtplessCellularNetworkImpl: void availableNetworks()
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.otpless.main.OtplessManager$ActivityLifeManager: void onActivityDestroyed(android.app.Activity)
io.flutter.view.TextureRegistry$GLTextureConsumer: android.graphics.SurfaceTexture getSurfaceTexture()
com.otpless.network.OtplessRepository$warmupSna$1$snaService$2: java.lang.Object invoke()
com.otpless.otplessflutter.OtplessFlutterPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: android.os.Bundle zba()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.otpless.R: R()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.otpless.network.EventService: java.lang.Object pushEvent(java.util.Map,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.otpless.dto.OtplessRequest: org.json.JSONObject toJsonObj()
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.otpless.network.OtplessCellularNetworkImplV2$telephonyService$2: android.telephony.TelephonyManager invoke()
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.otpless.main.WhatsappOtpReaderImpl$incomingIntentHandler$2: com.whatsapp.otp.android.sdk.WhatsAppOtpIncomingIntentHandler invoke()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection[] values()
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.otpless.tesseract.ApiData$Error: com.otpless.tesseract.ApiException component1()
com.otpless.network.OtplessCellularNetworkImpl: void linkAddresses(android.net.Network)
com.otpless.web.OtplessWebView: com.otpless.web.LoadingStatus access$200(com.otpless.web.OtplessWebView)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
com.otpless.dto.HeadlessResponse: org.json.JSONObject getResponse()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.otpless.web.OtplessWebView: void access$300(com.otpless.web.OtplessWebView)
androidx.preference.SeekBarPreference: SeekBarPreference(android.content.Context,android.util.AttributeSet)
com.otpless.main.OtplessViewImpl: void initHeadless(java.lang.String)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.otpless.dto.OtplessResponse: java.lang.String getErrorMessage()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.google.android.gms.common.api.internal.IStatusCallback$Stub: com.google.android.gms.common.api.internal.IStatusCallback asInterface(android.os.IBinder)
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String getApiKey()
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.transition.ViewUtilsApi21$Api29Impl: void setAnimationMatrix(android.view.View,android.graphics.Matrix)
com.otpless.main.WhatsappOtpReaderImpl: void onOtpReceived$otpless_android_sdk_release(java.lang.String)
com.otpless.main.OtplessView$-CC: void $default$attachOtplessSecureService(com.otpless.main.OtplessView,com.otpless.tesseract.OtplessSecureService)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: int describeContents()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
com.google.android.gms.auth.api.credentials.zbe: java.lang.Object[] newArray(int)
androidx.preference.DialogPreference: DialogPreference(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
com.otpless.tesseract.SimStateEntry: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: long totalDuration(android.animation.AnimatorSet)
com.otpless.utils.Utility: com.otpless.dto.Tuple parsePhoneNumberFromCredentialHintResult(androidx.activity.result.ActivityResult)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.otpless.main.OtplessWebAuthnManagerImpl: void lambda$isPlatformAuthenticatorAvailable$4(com.otpless.main.ResultCallback,java.lang.Exception)
com.otpless.network.OtplessCellularNetworkImpl$openWithDataCellular$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.chip.Chip: void setLines(int)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.otpless.utils.Utility: java.util.HashMap getAdditionalAppInfo()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics getViewportMetrics()
kotlin.random.Random: Random()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getOrCreatePerImageReader(android.media.ImageReader)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
com.otpless.main.OtplessView: void hideContainerView()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.otpless.utils.OtplessPhoneHintManagerImpl: void showPhoneNumberHint(boolean,kotlin.jvm.functions.Function1)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest$Builder setIdTokenRequested(boolean)
com.otpless.dto.HeadlessChannel: com.otpless.dto.HeadlessChannel valueOf(java.lang.String)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.otpless.otplessflutter.OtplessFlutterPlugin: void openOtplessLoginPage$lambda$5(com.otpless.otplessflutter.OtplessFlutterPlugin,com.otpless.dto.OtplessRequest)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.otpless.tesseract.OtplessSecureService: org.json.JSONObject getSystemIdentificationData()
com.otpless.main.OtplessViewImpl: void setRetryVisibility(boolean)
com.otpless.views.OtplessContainerView: void showLoader()
com.otpless.network.OtplessCellularNetworkImpl: android.net.ConnectivityManager getConnectivityManager()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doUnregisterEventListener(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)
androidx.window.extensions.core.util.function.Function: java.lang.Object apply(java.lang.Object)
com.otpless.tesseract.SecureAnalysisFpRequest: java.lang.String component2()
com.otpless.tesseract.ApiData$Success: com.otpless.tesseract.ApiData$Success copy$default(com.otpless.tesseract.ApiData$Success,java.lang.Object,int,java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.otpless.dto.HeadlessResponse: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.otpless.tesseract.SecureAuthDetail: int hashCode()
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.otpless.views.OtplessContainerView: void lambda$setUiConfiguration$5(int)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
com.google.android.gms.auth.api.credentials.zbb: zbb()
com.otpless.network.OtplessRepository: java.lang.Object requestSna(java.lang.String,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.otpless.dto.OtpDeliveryChannel: OtpDeliveryChannel(java.lang.String,int,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
io.flutter.view.TextureRegistry$SurfaceProducer: void setSize(int,int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.auth.api.credentials.Credential: java.lang.String getFamilyName()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doUnregisterEventListener(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,int)
com.otpless.network.ApiCallback: void onSuccess(java.lang.Object)
com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder setPrompt(int)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.whatsapp.otp.android.sdk.enums.WhatsAppOtpError: com.whatsapp.otp.android.sdk.enums.WhatsAppOtpError[] values()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.otpless.utils.OtplessUtility: com.otpless.dto.HeadlessResponse makeTimeoutError(com.otpless.dto.HeadlessRequest)
com.google.android.material.chip.Chip: float getTextStartPadding()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
com.otpless.web.NativeWebManager: void pushEvent(org.json.JSONObject)
com.otpless.otplessflutter.OtplessFlutterPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.otpless.dto.HeadlessRequest: void setDeliveryChannel(com.otpless.dto.OtpDeliveryChannel)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.otpless.network.OtplessRepository$pushEventAsync$2: java.lang.Object invokeSuspend(java.lang.Object)
com.otpless.main.OtplessWebAuthnManagerImpl: com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialRequestOptions makePublicKeyRequestOption(org.json.JSONObject)
com.otpless.web.NativeWebManager: boolean getBackSubscription()
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.otpless.utils.OnceUseProp: java.lang.Object getData()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.otpless.otplessflutter.OtplessFlutterPlugin: void startHeadless(org.json.JSONObject)
com.otpless.main.OtplessViewContract$-CC: void $default$onHeadlessResult(com.otpless.main.OtplessViewContract,com.otpless.dto.HeadlessResponse,boolean)
com.otpless.web.NativeWebManager: void checkWebAuthnAuthenticatorAvailability()
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.otpless.web.NativeWebManager$2: void onError(java.lang.Exception)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.android.gms.auth.api.credentials.Credential: java.lang.String getName()
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
com.otpless.network.OtplessRepository$warmupSna$1$1$responses$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void startRearDisplaySession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
com.otpless.main.OtplessViewImpl: void setLoaderVisibility(boolean)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
okhttp3.Protocol: okhttp3.Protocol[] values()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.otpless.web.WebLoaderCallback: void hideLoader()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
com.otpless.main.OtplessViewImpl: void attachOtplessSecureService(com.otpless.tesseract.OtplessSecureService)
com.google.android.material.chip.Chip: float getCloseIconSize()
com.otpless.utils.OtpReaderReceiver: android.content.IntentFilter newIntentFilter()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doBestEffortWrite(com.google.android.gms.common.api.internal.TaskApiCall)
com.otpless.web.OtplessWebListener: void getDataFromCellularNetwork(java.lang.String,java.lang.String)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
com.otpless.dto.HeadlessChannelType: com.otpless.dto.HeadlessChannelType valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.otpless.web.LoadingStatusData: com.otpless.web.LoadingStatus getLoadingStatus()
com.otpless.network.OtplessConnectivityManager: void onAvailable(android.net.Network)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
com.otpless.tesseract.SecureAuthDetail: SecureAuthDetail(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
com.otpless.tesseract.sim.OtplessSimStateReceiverKt$getSavedSimEjectionEntries$$inlined$sortByDescending$1: OtplessSimStateReceiverKt$getSavedSimEjectionEntries$$inlined$sortByDescending$1()
com.otpless.main.OtplessWebAuthnManagerImpl: java.lang.String encodeBase64(byte[])
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
com.otpless.main.OtplessViewImpl: void handleEmptyWebResponse(java.lang.String)
com.otpless.network.OtplessNetworkManager: com.otpless.network.NetworkStatusData access$000(com.otpless.network.OtplessNetworkManager)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.google.android.gms.auth.api.credentials.Credential: Credential(java.lang.String,java.lang.String,android.net.Uri,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.widget.TextViewCompat$Api34Impl: void setLineHeight(android.widget.TextView,int,float)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.otpless.network.OtplessCellularNetworkImplV2$telephonyService$2: java.lang.Object invoke()
com.otpless.network.OtplessCellularNetworkImplV2: org.json.JSONObject access$makeErrorJson(com.otpless.network.OtplessCellularNetworkImplV2,java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.otpless.main.NativeWebListener: com.otpless.authfusion.FacebookSignInSdk getFacebookSignInSdk()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.otpless.web.OtplessWebView: void lambda$callWebJs$1(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.startup.InitializationProvider: InitializationProvider()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
com.google.android.gms.auth.api.credentials.CredentialsApi: com.google.android.gms.common.api.PendingResult delete(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.Credential)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.otpless.main.OtplessManager: java.util.HashSet access$100(com.otpless.main.OtplessManager)
androidx.transition.ViewUtilsApi23$Api29Impl: void setTransitionVisibility(android.view.View,int)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.otpless.utils.Utility: android.net.Uri combineQueries(android.net.Uri,android.net.Uri)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.otpless.network.OtplessConnectivityManager: void requestNetwork(kotlin.jvm.functions.Function1)
com.otpless.views.OtplessContainerView: void lambda$initView$2(com.otpless.web.LoadingStatusData)
com.otpless.dto.HeadlessRequest: void setOtp(java.lang.String)
com.otpless.network.OtplessCellularNetworkImplV2: OtplessCellularNetworkImplV2(android.content.Context,com.otpless.network.OtplessConnectivityManager)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.otpless.main.OtplessViewImpl: void onHeadlessResult(com.otpless.dto.HeadlessResponse,boolean)
com.otpless.main.OtplessView$-CC: void $default$commitHeadlessResponse(com.otpless.main.OtplessView,com.otpless.dto.HeadlessResponse)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.HintRequest build()
com.otpless.dto.HeadlessRequest: java.lang.String getChannelType()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.otpless.web.NativeWebManager$2: void onSuccess(org.json.JSONObject)
com.otpless.main.OtplessWebAuthnManagerImpl: com.google.android.gms.fido.fido2.api.common.PublicKeyCredential convertIntentToPublicKeyCredential(android.content.Intent)
